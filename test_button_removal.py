#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–µ–º–∏—É–º"
"""
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_button_removal():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–µ–º–∏—É–º'...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        from keyboards.settings import create_premium_ai_keyboard
        keyboard = create_premium_ai_keyboard()
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫
        button_texts = []
        button_callbacks = []
        
        for row in keyboard.inline_keyboard:
            for button in row:
                button_texts.append(button.text)
                button_callbacks.append(button.callback_data)
        
        logger.info("üìã –¢–µ–∫—É—â–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –ø—Ä–µ–º–∏—É–º –ò–ò:")
        for i, (text, callback) in enumerate(zip(button_texts, button_callbacks), 1):
            logger.info(f"   {i}. {text} ‚Üí {callback}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–µ–º–∏—É–º" –Ω–µ—Ç
        removed_buttons = [
            "‚ÑπÔ∏è –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–µ–º–∏—É–º",
            "üìä –ú–æ–∏ –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å—ã"
        ]
        
        for removed_button in removed_buttons:
            if removed_button in button_texts:
                logger.error(f"   ‚ùå –ö–Ω–æ–ø–∫–∞ '{removed_button}' –≤—Å–µ –µ—â–µ –µ—Å—Ç—å!")
            else:
                logger.info(f"   ‚úÖ –ö–Ω–æ–ø–∫–∞ '{removed_button}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        expected_buttons = [
            "‚≠ê –ö—É–ø–∏—Ç—å +30 –∑–∞–ø—Ä–æ—Å–æ–≤ (100‚ÇΩ)",
            "üåü –ö—É–ø–∏—Ç—å –∑–∞ Telegram Stars", 
            "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"
        ]
        
        logger.info("üéØ –û–∂–∏–¥–∞–µ–º—ã–µ –∫–Ω–æ–ø–∫–∏:")
        for expected in expected_buttons:
            if expected in button_texts:
                logger.info(f"   ‚úÖ {expected}")
            else:
                logger.warning(f"   ‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {expected}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫
        logger.info(f"üìä –í—Å–µ–≥–æ –∫–Ω–æ–ø–æ–∫: {len(button_texts)}")
        
        if len(button_texts) == 3:
            logger.info("‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ (3)")
        else:
            logger.warning(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫: {len(button_texts)}")
        
        logger.info("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_button_removal()