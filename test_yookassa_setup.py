#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ÆKassa
"""
import asyncio
import logging
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_yookassa_setup():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ÆKassa"""
    
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ÆKassa...")
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        logger.info("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
        
        import os
        
        yookassa_vars = {
            'YOOKASSA_SHOP_ID': os.getenv('YOOKASSA_SHOP_ID'),
            'YOOKASSA_SECRET_KEY': os.getenv('YOOKASSA_SECRET_KEY'),
            'YOOKASSA_WEBHOOK_SECRET': os.getenv('YOOKASSA_WEBHOOK_SECRET')
        }
        
        for var_name, var_value in yookassa_vars.items():
            if var_value:
                masked_value = var_value[:8] + "..." + var_value[-4:] if len(var_value) > 12 else "***"
                logger.info(f"   ‚úÖ {var_name}: {masked_value}")
            else:
                logger.warning(f"   ‚ö†Ô∏è {var_name}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç yookassa
        logger.info("2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É yookassa...")
        
        try:
            import yookassa
            logger.info(f"   ‚úÖ yookassa –≤–µ—Ä—Å–∏—è: {yookassa.__version__}")
        except ImportError:
            logger.error("   ‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ yookassa –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
            logger.info("   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install yookassa")
            return
        
        # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º PaymentService
        logger.info("3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º PaymentService...")
        
        from services.payment_service import PaymentService
        payment_service = PaymentService()
        
        if payment_service.is_enabled():
            logger.info("   ‚úÖ PaymentService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        else:
            logger.warning("   ‚ö†Ô∏è PaymentService –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (–±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏)
        logger.info("4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞...")
        
        test_payment_data = {
            'user_id': 123456789,
            'requests_count': 10,
            'amount': 100.0
        }
        
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂
            payment_result = await payment_service.create_premium_payment(
                user_id=test_payment_data['user_id'],
                requests_count=test_payment_data['requests_count'],
                amount=test_payment_data['amount']
            )
            
            if payment_result:
                logger.info("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
                logger.info(f"      Payment ID: {payment_result['payment_id']}")
                logger.info(f"      Status: {payment_result['status']}")
                logger.info(f"      Amount: {payment_result['amount']}‚ÇΩ")
                logger.info(f"      Confirmation URL: {payment_result['confirmation_url'][:50]}...")
            else:
                logger.error("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂")
                
        except Exception as e:
            logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: {e}")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook handler
        logger.info("5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook handler...")
        
        try:
            from handlers.yookassa_webhook import YooKassaWebhookHandler
            webhook_handler = YooKassaWebhookHandler()
            logger.info("   ‚úÖ YooKassaWebhookHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∏
            test_body = b'{"test": "data"}'
            test_signature = "test_signature"
            
            signature_valid = webhook_handler.verify_signature(test_body, test_signature)
            logger.info(f"   ‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏: {'–≤–∫–ª—é—á–µ–Ω–∞' if yookassa_vars['YOOKASSA_WEBHOOK_SECRET'] else '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}")
            
        except Exception as e:
            logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ webhook handler: {e}")
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook server
        logger.info("6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook server...")
        
        try:
            from webhook_server import WebhookServer
            webhook_server = WebhookServer()
            logger.info("   ‚úÖ WebhookServer –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É")
            logger.info("   üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python webhook_server.py")
            
        except Exception as e:
            logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ webhook server: {e}")
        
        # 7. –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
        logger.info("7Ô∏è‚É£ –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏...")
        
        required_vars = ['YOOKASSA_SHOP_ID', 'YOOKASSA_SECRET_KEY']
        missing_vars = [var for var in required_vars if not yookassa_vars[var]]
        
        if not missing_vars and payment_service.is_enabled():
            logger.info("   üéâ –ÆKassa –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
            logger.info("   üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
            logger.info("      1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ webhook —Å–µ—Ä–≤–µ—Ä: python webhook_server.py")
            logger.info("      2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–µ–±—Ö—É–∫–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –ÆKassa")
            logger.info("      3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–ª–∞—Ç–µ–∂ –≤ –±–æ—Ç–µ")
        else:
            logger.warning("   ‚ö†Ô∏è –ÆKassa –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —á–∞—Å—Ç–∏—á–Ω–æ")
            if missing_vars:
                logger.warning(f"      –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
            logger.info("   üìñ –°–º. YOOKASSA_SETUP_GUIDE.md –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        logger.info("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_yookassa_setup())