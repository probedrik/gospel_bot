"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–∫–ª–∞–¥–∫–∞–º–∏
"""
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Dict, Any


def create_bookmarks_menu_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∑–∞–∫–ª–∞–¥–æ–∫"""
    buttons = [
        [
            InlineKeyboardButton(
                text="üìñ –ó–∞–∫–ª–∞–¥–∫–∏ –ë–∏–±–ª–∏–∏",
                callback_data="bookmarks_bible"
            )
        ],
        [
            InlineKeyboardButton(
                text="üí¨ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã",
                callback_data="bookmarks_commentaries"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="back_to_main"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def create_bookmarks_list_keyboard(bookmarks: List[Dict], page: int = 0, 
                                  bookmark_type: str = "bible", total_pages: int = 1) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–ª–∞–¥–æ–∫ (–º–∞–∫—Å–∏–º—É–º 16 –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤ 2 —Å—Ç–æ–ª–±—Ü–∞)
    
    Args:
        bookmarks: –°–ø–∏—Å–æ–∫ –∑–∞–∫–ª–∞–¥–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 0)
        bookmark_type: –¢–∏–ø –∑–∞–∫–ª–∞–¥–æ–∫ ("bible" –∏–ª–∏ "commentaries")
        total_pages: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    """
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–ª–∞–¥–∫–∏ –ø–æ 2 –≤ —Ä—è–¥ (–º–∞–∫—Å–∏–º—É–º 16 –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ = 8 —Ä—è–¥–æ–≤)
    for i in range(0, len(bookmarks), 2):
        row = []
        
        # –ü–µ—Ä–≤–∞—è –∑–∞–∫–ª–∞–¥–∫–∞ –≤ —Ä—è–¥—É
        bookmark1 = bookmarks[i]
        button1_text = format_bookmark_button_text(bookmark1, bookmark_type)
        button1_callback = f"open_bookmark_{bookmark_type}_{page * 16 + i}"
        row.append(InlineKeyboardButton(text=button1_text, callback_data=button1_callback))
        
        # –í—Ç–æ—Ä–∞—è –∑–∞–∫–ª–∞–¥–∫–∞ –≤ —Ä—è–¥—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if i + 1 < len(bookmarks):
            bookmark2 = bookmarks[i + 1]
            button2_text = format_bookmark_button_text(bookmark2, bookmark_type)
            button2_callback = f"open_bookmark_{bookmark_type}_{page * 16 + i + 1}"
            row.append(InlineKeyboardButton(text=button2_text, callback_data=button2_callback))
        
        buttons.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    if total_pages > 1:
        nav_row = []
        
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" (–µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
        if page > 0:
            nav_row.append(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"bookmarks_page_{bookmark_type}_{page - 1}"
            ))
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        nav_row.append(InlineKeyboardButton(
            text=f"üìÑ {page + 1}/{total_pages}",
            callback_data="noop"
        ))
        
        # –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ" (–µ—Å–ª–∏ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
        if page < total_pages - 1:
            nav_row.append(InlineKeyboardButton(
                text="–î–∞–ª–µ–µ ‚û°Ô∏è",
                callback_data=f"bookmarks_page_{bookmark_type}_{page + 1}"
            ))
        
        buttons.append(nav_row)
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∑–∞–∫–ª–∞–¥–æ–∫
    buttons.append([
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ö —Ç–∏–ø–∞–º –∑–∞–∫–ª–∞–¥–æ–∫",
            callback_data="bookmarks_menu"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def format_bookmark_button_text(bookmark: Dict, bookmark_type: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–∫–ª–∞–¥–∫–∏
    
    Args:
        bookmark: –î–∞–Ω–Ω—ã–µ –∑–∞–∫–ª–∞–¥–∫–∏
        bookmark_type: –¢–∏–ø –∑–∞–∫–ª–∞–¥–∫–∏ ("bible" –∏–ª–∏ "commentaries")
    """
    if bookmark_type == "bible":
        # –î–ª—è –±–∏–±–ª–µ–π—Å–∫–∏—Ö –∑–∞–∫–ª–∞–¥–æ–∫: "–ö–Ω–∏–≥–∞ –ì–ª–∞–≤–∞:–°—Ç–∏—Ö"
        book_name = bookmark.get('book_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        chapter_start = bookmark.get('chapter_start')
        chapter_end = bookmark.get('chapter_end')
        verse_start = bookmark.get('verse_start')
        verse_end = bookmark.get('verse_end')
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏
        if chapter_end and chapter_end != chapter_start:
            # –î–∏–∞–ø–∞–∑–æ–Ω –≥–ª–∞–≤
            reference = f"{book_name} {chapter_start}-{chapter_end}"
        elif verse_start and verse_end and verse_start != verse_end:
            # –î–∏–∞–ø–∞–∑–æ–Ω —Å—Ç–∏—Ö–æ–≤
            reference = f"{book_name} {chapter_start}:{verse_start}-{verse_end}"
        elif verse_start:
            # –û–¥–∏–Ω —Å—Ç–∏—Ö
            reference = f"{book_name} {chapter_start}:{verse_start}"
        else:
            # –í—Å—è –≥–ª–∞–≤–∞
            reference = f"{book_name} {chapter_start}"
        
        return reference
    
    elif bookmark_type == "commentaries":
        # –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–∑–±–æ—Ä–æ–≤: "–ö–Ω–∏–≥–∞ –ì–ª–∞–≤–∞:–°—Ç–∏—Ö (—Ç–∏–ø)"
        reference = bookmark.get('reference_text', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        commentary_type = bookmark.get('commentary_type', 'ai')
        type_icon = "ü§ñ" if commentary_type == "ai" else "üìù"
        
        return f"{type_icon} {reference}"
    
    return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∑–∞–∫–ª–∞–¥–∫–∞"


def create_bookmark_action_keyboard(bookmark_index: int, bookmark_type: str, page: int = 0) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–∫–ª–∞–¥–∫–∏"""
    buttons = [
        [
            InlineKeyboardButton(
                text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫—É",
                callback_data=f"delete_bookmark_{bookmark_type}_{bookmark_index}"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É –∑–∞–∫–ª–∞–¥–æ–∫",
                callback_data=f"bookmarks_page_{bookmark_type}_{page}"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)