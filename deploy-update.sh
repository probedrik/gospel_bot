#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Gospel Bot
# –û–±–Ω–æ–≤–ª—è–µ—Ç Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏ Docker Hub –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy-update.sh [–≤–µ—Ä—Å–∏—è] [—Å–æ–æ–±—â–µ–Ω–∏–µ_–∫–æ–º–º–∏—Ç–∞]

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
DOCKER_USERNAME="probedrik"
IMAGE_NAME="gospel-bot"
GITHUB_REPO="gospel_bot"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_color() {
    printf "${1}${2}${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
print_header() {
    echo
    print_color $PURPLE "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    print_color $PURPLE "  $1"
    print_color $PURPLE "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
get_current_version() {
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥
    local last_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v2.5.0")
    echo $last_tag
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
generate_next_version() {
    local current_version=$(get_current_version)
    # –£–±–∏—Ä–∞–µ–º 'v' –∏ —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
    local version_num=${current_version#v}
    local major=$(echo $version_num | cut -d. -f1)
    local minor=$(echo $version_num | cut -d. -f2)
    local patch=$(echo $version_num | cut -d. -f3)
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º patch –≤–µ—Ä—Å–∏—é
    patch=$((patch + 1))
    echo "v$major.$minor.$patch"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
VERSION=${1:-""}
COMMIT_MESSAGE=${2:-""}

print_header "üöÄ GOSPEL BOT - –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï"

# –ï—Å–ª–∏ –≤–µ—Ä—Å–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
if [ -z "$VERSION" ]; then
    CURRENT_VERSION=$(get_current_version)
    VERSION=$(generate_next_version)
    print_color $YELLOW "üè∑Ô∏è  –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $CURRENT_VERSION"
    print_color $CYAN "üè∑Ô∏è  –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: $VERSION"
    echo
    read -p "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é (Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é): " user_version
    if [ ! -z "$user_version" ]; then
        VERSION=$user_version
    fi
fi

# –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º
if [ -z "$COMMIT_MESSAGE" ]; then
    echo
    print_color $CYAN "üí¨ –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞:"
    read -p "> " COMMIT_MESSAGE
    if [ -z "$COMMIT_MESSAGE" ]; then
        COMMIT_MESSAGE="Update to $VERSION"
    fi
fi

print_header "üìã –ü–ê–†–ê–ú–ï–¢–†–´ –û–ë–ù–û–í–õ–ï–ù–ò–Ø"
print_color $BLUE "üè∑Ô∏è  –í–µ—Ä—Å–∏—è: $VERSION"
print_color $BLUE "üí¨ –ö–æ–º–º–∏—Ç: $COMMIT_MESSAGE"
print_color $BLUE "üê≥ Docker: $DOCKER_USERNAME/$IMAGE_NAME:$VERSION"
echo

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " confirm
if [[ ! $confirm =~ ^[Yy]$ ]]; then
    print_color $RED "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    exit 1
fi

print_header "üîç –ü–†–û–í–ï–†–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
if ! command -v git &> /dev/null; then
    print_color $RED "‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi
print_color $GREEN "‚úÖ Git –Ω–∞–π–¥–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    print_color $RED "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi
print_color $GREEN "‚úÖ Docker –Ω–∞–π–¥–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Docker Hub
print_color $BLUE "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Docker Hub..."
if ! docker info | grep -q "Username"; then
    print_color $YELLOW "‚ö†Ô∏è  –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Docker Hub"
    docker login
fi
print_color $GREEN "‚úÖ Docker Hub –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è OK"

print_header "üìù –û–ë–ù–û–í–õ–ï–ù–ò–ï GIT –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Git
if ! git status &> /dev/null; then
    print_color $RED "‚ùå –ù–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
    exit 1
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
print_color $BLUE "üìä –°—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:"
git status --short

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
print_color $BLUE "üìù –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
git add .

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞
if git diff --cached --quiet; then
    print_color $YELLOW "‚ö†Ô∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å —Ç–µ–≥–æ–º? (y/N): " continue_tag
    if [[ ! $continue_tag =~ ^[Yy]$ ]]; then
        exit 1
    fi
else
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    print_color $BLUE "üíæ –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç..."
    git commit -m "$COMMIT_MESSAGE"
    print_color $GREEN "‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω"
fi

# –°–æ–∑–¥–∞–µ–º —Ç–µ–≥
print_color $BLUE "üè∑Ô∏è  –°–æ–∑–¥–∞–µ–º —Ç–µ–≥ $VERSION..."
if git tag -l | grep -q "^$VERSION$"; then
    print_color $YELLOW "‚ö†Ô∏è  –¢–µ–≥ $VERSION —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    read -p "–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ–≥? (y/N): " delete_tag
    if [[ $delete_tag =~ ^[Yy]$ ]]; then
        git tag -d $VERSION
        git push origin :refs/tags/$VERSION 2>/dev/null || true
    else
        exit 1
    fi
fi

git tag -a $VERSION -m "Release $VERSION: $COMMIT_MESSAGE"
print_color $GREEN "‚úÖ –¢–µ–≥ $VERSION —Å–æ–∑–¥–∞–Ω"

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ GitHub
print_color $BLUE "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GitHub..."
git push origin master
git push origin $VERSION
print_color $GREEN "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub"

print_header "üê≥ –°–ë–û–†–ö–ê –ò –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø DOCKER –û–ë–†–ê–ó–ê"

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
print_color $BLUE "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$VERSION .

# –°–æ–∑–¥–∞–µ–º —Ç–µ–≥ latest
print_color $BLUE "üè∑Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞ latest..."
docker tag $DOCKER_USERNAME/$IMAGE_NAME:$VERSION $DOCKER_USERNAME/$IMAGE_NAME:latest

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—Ä–∞–∑–µ
print_color $BLUE "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—Ä–∞–∑–µ:"
docker images $DOCKER_USERNAME/$IMAGE_NAME

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
print_color $BLUE "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞..."
if docker run --rm $DOCKER_USERNAME/$IMAGE_NAME:$VERSION python -c "import sys; print('Python version:', sys.version); import aiogram; print('Aiogram imported successfully')"; then
    print_color $GREEN "‚úÖ –û–±—Ä–∞–∑ –ø—Ä–æ—à–µ–ª –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã"
else
    print_color $RED "‚ùå –û–±—Ä–∞–∑ –Ω–µ –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç—ã"
    exit 1
fi

# –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ Docker Hub
print_color $BLUE "üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞ –Ω–∞ Docker Hub..."
docker push $DOCKER_USERNAME/$IMAGE_NAME:$VERSION
docker push $DOCKER_USERNAME/$IMAGE_NAME:latest

print_header "üéâ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!"

print_color $GREEN "‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω"
print_color $GREEN "‚úÖ –¢–µ–≥ $VERSION —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
print_color $GREEN "‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω"
echo

print_color $CYAN "üîó –°—Å—ã–ª–∫–∏:"
echo "   üìÇ GitHub: https://github.com/$DOCKER_USERNAME/$GITHUB_REPO"
echo "   üê≥ Docker Hub: https://hub.docker.com/r/$DOCKER_USERNAME/$IMAGE_NAME"
echo "   üè∑Ô∏è  –†–µ–ª–∏–∑: https://github.com/$DOCKER_USERNAME/$GITHUB_REPO/releases/tag/$VERSION"
echo

print_color $YELLOW "üìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
echo "   docker pull $DOCKER_USERNAME/$IMAGE_NAME:$VERSION"
echo "   docker-compose down && docker-compose up -d"
echo

print_color $BLUE "üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–ª–∏–∑ –Ω–∞ GitHub"
echo "   2. –û–±–Ω–æ–≤–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–∞–º–∏ –≤—ã—à–µ"
echo "   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞"
echo 