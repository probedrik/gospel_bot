#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Gospel Bot v0.7.2
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Docker Hub

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üåü –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Gospel Bot v0.7.2..."

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
VERSION="v0.7.2"
IMAGE_NAME="gospel-bot"
DOCKER_REPO="your-dockerhub-username"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Docker Hub username

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

echo_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

echo_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

echo_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."

if ! command -v git &> /dev/null; then
    echo_error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

if ! command -v docker &> /dev/null; then
    echo_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

echo_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
echo_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git..."

if [[ -n $(git status --porcelain) ]]; then
    echo_warning "–ï—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
    git status --short
    
    read -p "–•–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git add .
        git commit -m "feat: Telegram Stars integration v0.7.2

üåü –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ Telegram Stars (1, 10, 25, 50, 100 Stars)
- –ü–æ–∫—É–ø–∫–∞ –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ Stars
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Supabase –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
- –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π PremiumManager —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Stars

üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
- –£–±—Ä–∞–Ω–æ —á–µ—Ä–Ω–æ–µ –æ–∫–Ω–æ –≤ –∏–Ω–≤–æ–π—Å–∞—Ö
- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è callback_data
- HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–º–µ—Å—Ç–æ Markdown
- –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ amount_rub –ø–æ–ª–µ–π

üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
- –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç—ã –¥–ª—è Stars –ø–ª–∞—Ç–µ–∂–µ–π
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
- –í–∞–ª–∏–¥–∞—Ü–∏—è callback_data
- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–≤–æ–π—Å–æ–≤"
        echo_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã"
    else
        echo_error "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 1
    fi
fi

# 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞
echo_info "–°–æ–∑–¥–∞–µ–º Git —Ç–µ–≥ $VERSION..."

if git tag -l | grep -q "^$VERSION$"; then
    echo_warning "–¢–µ–≥ $VERSION —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    read -p "–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ–≥? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git tag -d $VERSION
        git push origin :refs/tags/$VERSION 2>/dev/null || true
        echo_success "–°—Ç–∞—Ä—ã–π —Ç–µ–≥ —É–¥–∞–ª–µ–Ω"
    else
        echo_error "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 1
    fi
fi

git tag -a $VERSION -m "Gospel Bot $VERSION - Telegram Stars Integration

üåü Major Features:
- Telegram Stars payments integration
- Premium AI requests purchase system
- Supabase database support
- Enhanced payment processing

üîß Bug Fixes:
- Fixed invoice display issues
- Improved callback data handling
- Better error handling and logging

üìä Statistics:
- Full test coverage
- Production ready
- Docker optimized"

echo_success "Git —Ç–µ–≥ $VERSION —Å–æ–∑–¥–∞–Ω"

# 4. –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
echo_info "–°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Dockerfile
if [[ ! -f "Dockerfile" ]]; then
    echo_error "Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
docker build -t $IMAGE_NAME:$VERSION . --no-cache

# –¢–µ–≥–∏—Ä—É–µ–º –∫–∞–∫ latest
docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:latest

echo_success "Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω: $IMAGE_NAME:$VERSION"

# 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
echo_info "–¢–µ—Å—Ç–∏—Ä—É–µ–º Docker –æ–±—Ä–∞–∑..."

# –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞
if docker run --rm $IMAGE_NAME:$VERSION python -c "import sys; print(f'Python {sys.version}'); print('‚úÖ –û–±—Ä–∞–∑ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')"; then
    echo_success "Docker –æ–±—Ä–∞–∑ –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
else
    echo_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Docker –æ–±—Ä–∞–∑–∞"
    exit 1
fi

# 6. –ü—É—à –≤ Git
echo_info "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Git..."

git push origin main
git push origin $VERSION

echo_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"

# 7. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Docker Hub (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—Ä–∞–∑ –≤ Docker Hub? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo_info "–ü—É–±–ª–∏–∫—É–µ–º –≤ Docker Hub..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if ! docker info | grep -q "Username:"; then
        echo_warning "–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Docker Hub"
        docker login
    fi
    
    # –¢–µ–≥–∏—Ä—É–µ–º –¥–ª—è Docker Hub
    docker tag $IMAGE_NAME:$VERSION $DOCKER_REPO/$IMAGE_NAME:$VERSION
    docker tag $IMAGE_NAME:$VERSION $DOCKER_REPO/$IMAGE_NAME:latest
    
    # –ü—É–±–ª–∏–∫—É–µ–º
    docker push $DOCKER_REPO/$IMAGE_NAME:$VERSION
    docker push $DOCKER_REPO/$IMAGE_NAME:latest
    
    echo_success "–û–±—Ä–∞–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ Docker Hub: $DOCKER_REPO/$IMAGE_NAME:$VERSION"
else
    echo_info "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ Docker Hub"
fi

# 8. –°–æ–∑–¥–∞–Ω–∏–µ GitHub Release (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è GitHub)
if git remote get-url origin | grep -q "github.com"; then
    echo_info "–°–æ–∑–¥–∞–µ–º GitHub Release..."
    
    if command -v gh &> /dev/null; then
        gh release create $VERSION \
            --title "Gospel Bot $VERSION - Telegram Stars Integration" \
            --notes-file RELEASE_$VERSION.md \
            --latest
        echo_success "GitHub Release —Å–æ–∑–¥–∞–Ω"
    else
        echo_warning "GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ª–∏–∑ –≤—Ä—É—á–Ω—É—é:"
        echo "https://github.com/$(git remote get-url origin | sed 's/.*github.com[:/]\([^/]*\/[^/]*\).*/\1/' | sed 's/\.git$//')/releases/new?tag=$VERSION"
    fi
fi

# 9. –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo
echo_success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Gospel Bot $VERSION –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo
echo_info "üìã –°–≤–æ–¥–∫–∞:"
echo "   ‚Ä¢ –í–µ—Ä—Å–∏—è: $VERSION"
echo "   ‚Ä¢ Docker –æ–±—Ä–∞–∑: $IMAGE_NAME:$VERSION"
echo "   ‚Ä¢ Git —Ç–µ–≥: $VERSION"
echo "   ‚Ä¢ –î–∞—Ç–∞: $(date)"
echo
echo_info "üöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
echo "   docker run -d --name gospel-bot --env-file .env $IMAGE_NAME:$VERSION"
echo
echo_info "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "   ‚Ä¢ RELEASE_$VERSION.md - –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
echo "   ‚Ä¢ TELEGRAM_STARS_GUIDE.md - —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ Stars"
echo
echo_warning "üîß –ù–µ –∑–∞–±—É–¥—å—Ç–µ:"
echo "   ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É Telegram Stars"
echo "   ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é"
echo

echo_success "–ì–æ—Ç–æ–≤–æ! üåü"