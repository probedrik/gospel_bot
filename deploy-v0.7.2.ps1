# üöÄ –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Gospel Bot v0.7.2 –¥–ª—è Windows
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Docker Hub

param(
    [string]$DockerRepo = "your-dockerhub-username",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Docker Hub username
    [switch]$SkipDockerHub = $false,
    [switch]$SkipTests = $false
)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
$VERSION = "v0.7.2"
$IMAGE_NAME = "gospel-bot"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
function Write-Info($message) {
    Write-Host "‚ÑπÔ∏è  $message" -ForegroundColor Blue
}

function Write-Success($message) {
    Write-Host "‚úÖ $message" -ForegroundColor Green
}

function Write-Warning($message) {
    Write-Host "‚ö†Ô∏è  $message" -ForegroundColor Yellow
}

function Write-Error($message) {
    Write-Host "‚ùå $message" -ForegroundColor Red
}

Write-Host "üåü –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Gospel Bot $VERSION..." -ForegroundColor Cyan

try {
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    Write-Info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."

    if (!(Get-Command git -ErrorAction SilentlyContinue)) {
        Write-Error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    }

    if (!(Get-Command docker -ErrorAction SilentlyContinue)) {
        Write-Error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    }

    Write-Success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    Write-Info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git..."

    $gitStatus = git status --porcelain
    if ($gitStatus) {
        Write-Warning "–ï—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
        git status --short
        
        $response = Read-Host "–•–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è? (y/n)"
        if ($response -eq 'y' -or $response -eq 'Y') {
            git add .
            git commit -m "feat: Telegram Stars integration $VERSION

üåü –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ Telegram Stars (1, 10, 25, 50, 100 Stars)
- –ü–æ–∫—É–ø–∫–∞ –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ Stars
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Supabase –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
- –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π PremiumManager —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Stars

üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
- –£–±—Ä–∞–Ω–æ —á–µ—Ä–Ω–æ–µ –æ–∫–Ω–æ –≤ –∏–Ω–≤–æ–π—Å–∞—Ö
- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è callback_data
- HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–º–µ—Å—Ç–æ Markdown
- –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ amount_rub –ø–æ–ª–µ–π

üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
- –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç—ã –¥–ª—è Stars –ø–ª–∞—Ç–µ–∂–µ–π
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
- –í–∞–ª–∏–¥–∞—Ü–∏—è callback_data
- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–≤–æ–π—Å–æ–≤"
            Write-Success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã"
        } else {
            Write-Error "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
            exit 1
        }
    }

    # 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞
    Write-Info "–°–æ–∑–¥–∞–µ–º Git —Ç–µ–≥ $VERSION..."

    $existingTag = git tag -l | Where-Object { $_ -eq $VERSION }
    if ($existingTag) {
        Write-Warning "–¢–µ–≥ $VERSION —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        $response = Read-Host "–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ–≥? (y/n)"
        if ($response -eq 'y' -or $response -eq 'Y') {
            git tag -d $VERSION
            git push origin ":refs/tags/$VERSION" 2>$null
            Write-Success "–°—Ç–∞—Ä—ã–π —Ç–µ–≥ —É–¥–∞–ª–µ–Ω"
        } else {
            Write-Error "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
            exit 1
        }
    }

    git tag -a $VERSION -m "Gospel Bot $VERSION - Telegram Stars Integration

üåü Major Features:
- Telegram Stars payments integration
- Premium AI requests purchase system
- Supabase database support
- Enhanced payment processing

üîß Bug Fixes:
- Fixed invoice display issues
- Improved callback data handling
- Better error handling and logging

üìä Statistics:
- Full test coverage
- Production ready
- Docker optimized"

    Write-Success "Git —Ç–µ–≥ $VERSION —Å–æ–∑–¥–∞–Ω"

    # 4. –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º)
    if (!$SkipTests) {
        Write-Info "–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã..."
        
        $testFiles = @(
            "test_payments.py",
            "test_premium_display.py", 
            "test_callback_filtering.py",
            "test_invoice_display.py"
        )
        
        foreach ($testFile in $testFiles) {
            if (Test-Path $testFile) {
                Write-Info "–ó–∞–ø—É—Å–∫–∞–µ–º $testFile..."
                python $testFile
                if ($LASTEXITCODE -ne 0) {
                    Write-Error "–¢–µ—Å—Ç $testFile –ø—Ä–æ–≤–∞–ª–µ–Ω!"
                    exit 1
                }
            }
        }
        
        Write-Success "–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã"
    }

    # 5. –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
    Write-Info "–°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑..."

    if (!(Test-Path "Dockerfile")) {
        Write-Error "Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    }

    docker build -t "${IMAGE_NAME}:${VERSION}" . --no-cache
    if ($LASTEXITCODE -ne 0) {
        Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ Docker –æ–±—Ä–∞–∑–∞"
        exit 1
    }

    docker tag "${IMAGE_NAME}:${VERSION}" "${IMAGE_NAME}:latest"
    Write-Success "Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω: ${IMAGE_NAME}:${VERSION}"

    # 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
    Write-Info "–¢–µ—Å—Ç–∏—Ä—É–µ–º Docker –æ–±—Ä–∞–∑..."

    $testResult = docker run --rm "${IMAGE_NAME}:${VERSION}" python -c "import sys; print(f'Python {sys.version}'); print('‚úÖ –û–±—Ä–∞–∑ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')"
    if ($LASTEXITCODE -eq 0) {
        Write-Success "Docker –æ–±—Ä–∞–∑ –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
    } else {
        Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Docker –æ–±—Ä–∞–∑–∞"
        exit 1
    }

    # 7. –ü—É—à –≤ Git
    Write-Info "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Git..."

    git push origin main
    git push origin $VERSION

    Write-Success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"

    # 8. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Docker Hub (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º)
    if (!$SkipDockerHub) {
        $response = Read-Host "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—Ä–∞–∑ –≤ Docker Hub? (y/n)"
        if ($response -eq 'y' -or $response -eq 'Y') {
            Write-Info "–ü—É–±–ª–∏–∫—É–µ–º –≤ Docker Hub..."
            
            # –¢–µ–≥–∏—Ä—É–µ–º –¥–ª—è Docker Hub
            docker tag "${IMAGE_NAME}:${VERSION}" "${DockerRepo}/${IMAGE_NAME}:${VERSION}"
            docker tag "${IMAGE_NAME}:${VERSION}" "${DockerRepo}/${IMAGE_NAME}:latest"
            
            # –ü—É–±–ª–∏–∫—É–µ–º
            docker push "${DockerRepo}/${IMAGE_NAME}:${VERSION}"
            docker push "${DockerRepo}/${IMAGE_NAME}:latest"
            
            Write-Success "–û–±—Ä–∞–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ Docker Hub: ${DockerRepo}/${IMAGE_NAME}:${VERSION}"
        } else {
            Write-Info "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ Docker Hub"
        }
    }

    # 9. –°–æ–∑–¥–∞–Ω–∏–µ GitHub Release (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è GitHub)
    $gitRemote = git remote get-url origin
    if ($gitRemote -match "github.com") {
        Write-Info "–°–æ–∑–¥–∞–µ–º GitHub Release..."
        
        if (Get-Command gh -ErrorAction SilentlyContinue) {
            gh release create $VERSION --title "Gospel Bot $VERSION - Telegram Stars Integration" --notes-file "RELEASE_$VERSION.md" --latest
            Write-Success "GitHub Release —Å–æ–∑–¥–∞–Ω"
        } else {
            Write-Warning "GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ª–∏–∑ –≤—Ä—É—á–Ω—É—é"
            $repoUrl = $gitRemote -replace ".*github.com[:/]([^/]*/[^/]*)(\.git)?.*", 'https://github.com/$1'
            Write-Info "URL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞: $repoUrl/releases/new?tag=$VERSION"
        }
    }

    # 10. –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    Write-Host ""
    Write-Success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Gospel Bot $VERSION –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    Write-Host ""
    Write-Info "üìã –°–≤–æ–¥–∫–∞:"
    Write-Host "   ‚Ä¢ –í–µ—Ä—Å–∏—è: $VERSION"
    Write-Host "   ‚Ä¢ Docker –æ–±—Ä–∞–∑: ${IMAGE_NAME}:${VERSION}"
    Write-Host "   ‚Ä¢ Git —Ç–µ–≥: $VERSION"
    Write-Host "   ‚Ä¢ –î–∞—Ç–∞: $(Get-Date)"
    Write-Host ""
    Write-Info "üöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
    Write-Host "   docker run -d --name gospel-bot --env-file .env ${IMAGE_NAME}:${VERSION}"
    Write-Host ""
    Write-Info "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
    Write-Host "   ‚Ä¢ RELEASE_$VERSION.md - –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    Write-Host "   ‚Ä¢ TELEGRAM_STARS_GUIDE.md - —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ Stars"
    Write-Host ""
    Write-Warning "üîß –ù–µ –∑–∞–±—É–¥—å—Ç–µ:"
    Write-Host "   ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    Write-Host "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É Telegram Stars"
    Write-Host "   ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é"
    Write-Host ""

    Write-Success "–ì–æ—Ç–æ–≤–æ! üåü"

} catch {
    Write-Error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: $($_.Exception.Message)"
    exit 1
}