#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–µ–Ω—é
"""
import asyncio
import logging
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_premium_display():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å–æ–≤"""
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        from database.universal_manager import universal_db_manager as db_manager
        await db_manager.initialize()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å–æ–≤
        from services.premium_manager import PremiumManager
        premium_manager = PremiumManager()
        
        test_user_id = 2040516595  # –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π ID
        
        logger.info("üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å–æ–≤...")
        
        # 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
        balance = await premium_manager.get_user_premium_requests(test_user_id)
        logger.info(f"üíé –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance} –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å–æ–≤")
        
        # 2. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await premium_manager.get_user_premium_stats(test_user_id)
        logger.info(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        logger.info(f"   - –î–æ—Å—Ç—É–ø–Ω–æ: {stats['available']}")
        logger.info(f"   - –í—Å–µ–≥–æ –∫—É–ø–ª–µ–Ω–æ: {stats['total_purchased']}")
        logger.info(f"   - –í—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {stats['total_used']}")
        logger.info(f"   - –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {stats['created_at']}")
        
        # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ handlers/payments.py
        from handlers.payments import get_user_premium_balance
        balance_from_handler = await get_user_premium_balance(test_user_id)
        logger.info(f"üí∞ –ë–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ handler: {balance_from_handler}")
        
        if balance == balance_from_handler:
            logger.info("‚úÖ –ë–∞–ª–∞–Ω—Å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        else:
            logger.error(f"‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –±–∞–ª–∞–Ω—Å–∞: {balance} != {balance_from_handler}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–∞–ª–∞–Ω—Å –±–æ–ª—å—à–µ 0
        if balance > 0:
            logger.info(f"‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å—ã: {balance}")
            logger.info("üí° –í –º–µ–Ω—é –¥–æ–ª–∂–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å–∞—Ö")
        else:
            logger.info("‚ÑπÔ∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å–æ–≤")
            logger.info("üí° –í –º–µ–Ω—é –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å—Å—è –∫—É–ø–∏—Ç—å –ø—Ä–µ–º–∏—É–º –∑–∞–ø—Ä–æ—Å—ã")
        
        logger.info("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        await db_manager.close()

if __name__ == "__main__":
    asyncio.run(test_premium_display())