#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–ª–∞–¥–æ–∫ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.universal_manager import universal_db_manager as db_manager


async def check_bookmarks_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–∫–ª–∞–¥–æ–∫ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–∫–ª–∞–¥–æ–∫...")
    print("=" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–ª–∞–¥–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        test_user_id = 123456789  # –¢–µ—Å—Ç–æ–≤—ã–π ID
        bookmarks = await db_manager.get_bookmarks(test_user_id)
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–ª–∞–¥–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {len(bookmarks)}")
        
        if bookmarks:
            print("\\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–π –∑–∞–∫–ª–∞–¥–∫–∏:")
            first_bookmark = bookmarks[0]
            
            if isinstance(first_bookmark, dict):
                # Supabase/PostgreSQL —Ñ–æ—Ä–º–∞—Ç
                print("‚úÖ –§–æ—Ä–º–∞—Ç: —Å–ª–æ–≤–∞—Ä—å (Supabase/PostgreSQL)")
                for key, value in first_bookmark.items():
                    print(f"   {key}: {value}")
                    
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π
                required_fields = ['chapter_start', 'chapter_end', 'verse_start', 'verse_end']
                missing_fields = [field for field in required_fields if field not in first_bookmark]
                
                if missing_fields:
                    print(f"\\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}")
                    print("   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!")
                else:
                    print("\\n‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
                    
            elif isinstance(first_bookmark, (list, tuple)):
                # SQLite —Ñ–æ—Ä–º–∞—Ç
                print("‚úÖ –§–æ—Ä–º–∞—Ç: –∫–æ—Ä—Ç–µ–∂/—Å–ø–∏—Å–æ–∫ (SQLite)")
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–µ–π: {len(first_bookmark)}")
                print(f"   –î–∞–Ω–Ω—ã–µ: {first_bookmark}")
                
                if len(first_bookmark) >= 8:
                    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É")
                else:
                    print("‚ö†Ô∏è  –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞—Ä–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É")
            
        else:
            print("‚ÑπÔ∏è  –ó–∞–∫–ª–∞–¥–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)")
            
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–ª–∞–¥–∫–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        print("\\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–ª–∞–¥–∫–∏...")
        
        success = await db_manager.add_bookmark(
            user_id=test_user_id,
            book_id=1,  # –ë—ã—Ç–∏–µ
            chapter_start=1,
            chapter_end=3,  # –î–∏–∞–ø–∞–∑–æ–Ω –≥–ª–∞–≤ 1-3
            verse_start=None,
            verse_end=None,
            display_text="–ë—ã—Ç 1-3",
            note="–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–∫–ª–∞–¥–∫–∞"
        )
        
        if success:
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–ª–∞–¥–∫–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–ª–∞–¥–∫–∞ –¥–æ–±–∞–≤–∏–ª–∞—Å—å
            updated_bookmarks = await db_manager.get_bookmarks(test_user_id)
            print(f"üìä –ó–∞–∫–ª–∞–¥–æ–∫ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {len(updated_bookmarks)}")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–∫–ª–∞–¥–∫—É
            await db_manager.remove_bookmark(
                test_user_id, 1, 1, 3, None, None
            )
            print("üóëÔ∏è  –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–∫–ª–∞–¥–∫–∞ —É–¥–∞–ª–µ–Ω–∞")
            
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–ª–∞–¥–∫–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        import traceback
        traceback.print_exc()
    
    print("\\n" + "=" * 50)
    print("üèÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    await check_bookmarks_structure()


if __name__ == "__main__":
    asyncio.run(main())