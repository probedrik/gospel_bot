#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–≤–æ–π—Å–æ–≤ –±–µ–∑ —á–µ—Ä–Ω–æ–≥–æ –æ–∫–Ω–∞
"""
import asyncio
import logging
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_invoice_parameters():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–Ω–≤–æ–π—Å–∞"""
    
    logger.info("üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–Ω–≤–æ–π—Å–∞...")
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª payments.py
    with open('handlers/payments.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ photo –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–¥–∞–ª–µ–Ω—ã
    photo_params = ['photo_url', 'photo_size', 'photo_width', 'photo_height']
    found_params = []
    
    for param in photo_params:
        if param in content:
            found_params.append(param)
    
    if found_params:
        logger.error(f"‚ùå –ù–∞–π–¥–µ–Ω—ã photo –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {found_params}")
        logger.error("–≠—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–∑–¥–∞—é—Ç —á–µ—Ä–Ω–æ–µ –æ–∫–Ω–æ –≤ –∏–Ω–≤–æ–π—Å–µ!")
    else:
        logger.info("‚úÖ Photo –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–¥–∞–ª–µ–Ω—ã - —á–µ—Ä–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–ª—è—Ç—å—Å—è")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Å—É–º–º—ã –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É–º–º—ã –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π...")
    
    with open('keyboards/settings.py', 'r', encoding='utf-8') as f:
        keyboard_content = f.read()
    
    donation_amounts = ['donate_stars_1', 'donate_stars_10', 'donate_stars_25', 'donate_stars_50', 'donate_stars_100']
    found_amounts = []
    
    for amount in donation_amounts:
        if amount in keyboard_content:
            found_amounts.append(amount.replace('donate_stars_', '') + ' Stars')
    
    logger.info(f"üí∞ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—É–º–º—ã –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π: {', '.join(found_amounts)}")
    
    if len(found_amounts) == 5:
        logger.info("‚úÖ –í—Å–µ —Å—É–º–º—ã –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        logger.warning(f"‚ö†Ô∏è –û–∂–∏–¥–∞–ª–æ—Å—å 5 —Å—É–º–º, –Ω–∞–π–¥–µ–Ω–æ {len(found_amounts)}")
    
    logger.info("üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    test_invoice_parameters()