version: '3.8'

services:
  gospel-bot:
    build: .
    container_name: gospel-bot-main
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_USER_ID=${ADMIN_USER_ID}
      - USE_SUPABASE=${USE_SUPABASE}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_PREMIUM_API_KEY=${OPENROUTER_PREMIUM_API_KEY}
      - YOOKASSA_SHOP_ID=${YOOKASSA_SHOP_ID}
      - YOOKASSA_SECRET_KEY=${YOOKASSA_SECRET_KEY}
      - YOOKASSA_WEBHOOK_SECRET=${YOOKASSA_WEBHOOK_SECRET}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - gospel-network
    depends_on:
      - webhook-server

  webhook-server:
    build: .
    container_name: gospel-webhook-server
    restart: unless-stopped
    command: python webhook_server.py
    ports:
      - "8080:8080"
    environment:
      - USE_SUPABASE=${USE_SUPABASE}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - YOOKASSA_SHOP_ID=${YOOKASSA_SHOP_ID}
      - YOOKASSA_SECRET_KEY=${YOOKASSA_SECRET_KEY}
      - YOOKASSA_WEBHOOK_SECRET=${YOOKASSA_WEBHOOK_SECRET}
    volumes:
      - ./logs:/app/logs
    networks:
      - gospel-network

  # Nginx для проксирования и SSL (опционально)
  nginx:
    image: nginx:alpine
    container_name: gospel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - gospel-network
    depends_on:
      - webhook-server

networks:
  gospel-network:
    driver: bridge

volumes:
  gospel-data:
  gospel-logs: