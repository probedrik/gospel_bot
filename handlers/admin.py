"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
"""
import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

from config.settings import USE_LOCAL_FILES
import config.settings as settings

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
admin_router = Router()

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID)
ADMIN_ID = 2040516595  # –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π ID


def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
    return user_id == ADMIN_ID


@admin_router.message(Command("admin"))
async def admin_panel(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    current_source = "–õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã" if USE_LOCAL_FILES else "API"

    bible_format = "HTML"
    if settings.ENABLE_VERSE_NUMBERS and settings.BIBLE_MARKDOWN_ENABLED:
        bible_format = settings.BIBLE_MARKDOWN_MODE
    elif settings.ENABLE_VERSE_NUMBERS:
        bible_format = "HTML"
    else:
        bible_format = "–ù/–î"

    commentary_format = "HTML"
    if settings.COMMENTARY_MARKDOWN_ENABLED:
        commentary_format = settings.COMMENTARY_MARKDOWN_MODE

    admin_text = f"""
üîß **–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å**

üìä **–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:**
‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: {current_source}
‚Ä¢ –ù–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–æ–≤: {"‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if settings.ENABLE_VERSE_NUMBERS else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã"}
‚Ä¢ –§–æ—Ä–º–∞—Ç —Å—Ç–∏—Ö–æ–≤: {bible_format}
‚Ä¢ –¶–∏—Ç–∞—Ç–∞ –ë–∏–±–ª–∏–∏: {"‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if settings.BIBLE_QUOTE_ENABLED else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞"}
‚Ä¢ –ü—Ä–æ–±–µ–ª–æ–≤ –ø–æ—Å–ª–µ –Ω–æ–º–µ—Ä–∞: {settings.BIBLE_VERSE_NUMBER_SPACING}
‚Ä¢ –§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤: {"–≥–ª–∞–≤–∞:—Å—Ç–∏—Ö" if settings.BIBLE_INCLUDE_CHAPTER_NUMBER else "—Ç–æ–ª—å–∫–æ —Å—Ç–∏—Ö"}
‚Ä¢ –°—Ç–∏–ª—å –Ω–æ–º–µ—Ä–æ–≤: {settings.BIBLE_VERSE_NUMBER_STYLE}
‚Ä¢ –¢–æ–ª–∫–æ–≤–∞–Ω–∏—è –õ–æ–ø—É—Ö–∏–Ω–∞: {"‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if settings.ENABLE_LOPUKHIN_COMMENTARY else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã"}
‚Ä¢ –§–æ—Ä–º–∞—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π: {commentary_format}

üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `/toggle_source` - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö (API ‚Üî –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã)
‚Ä¢ `/toggle_verses` - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–æ–≤
‚Ä¢ `/toggle_quote` - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ü–∏—Ç–∞—Ç (>)
‚Ä¢ `/toggle_chapter_numbers` - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤ (12 ‚Üî 2:12)
‚Ä¢ `/toggle_lopukhin` - –≤–∫–ª—é—á–∏—Ç—å/–æ—Ç–∫–ª—é—á–∏—Ç—å —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –õ–æ–ø—É—Ö–∏–Ω–∞
‚Ä¢ `/set_format` - –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å—Ç–∏—Ö–æ–≤ (HTML/Markdown/MarkdownV2)
‚Ä¢ `/set_commentary_format` - –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π
‚Ä¢ `/set_spacing` - –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–µ–ª–æ–≤ –ø–æ—Å–ª–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–∞
‚Ä¢ `/settings` - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
‚Ä¢ `/status` - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ `/reload_config` - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
"""

    await message.answer(admin_text, parse_mode="Markdown")


@admin_router.message(Command("toggle_source"))
async def toggle_data_source(message: Message):
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É API –∏ –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        settings.USE_LOCAL_FILES = not settings.USE_LOCAL_FILES

        new_source = "–õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã" if settings.USE_LOCAL_FILES else "API"

        await message.answer(
            f"‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞: **{new_source}**\n\n"
            f"–¢–µ–ø–µ—Ä—å –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å {'–ª–æ–∫–∞–ª—å–Ω—ã–µ JSON —Ñ–∞–π–ª—ã' if settings.USE_LOCAL_FILES else '–≤–Ω–µ—à–Ω–∏–π API'} "
            f"–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –ë–∏–±–ª–∏–∏.",
            parse_mode="Markdown"
        )

        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.id} –ø–µ—Ä–µ–∫–ª—é—á–∏–ª –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –Ω–∞: {new_source}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö.")


@admin_router.message(Command("status"))
async def system_status(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        import os
        from utils.api_client import bible_api

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        local_rst_exists = os.path.exists("local/rst.json")
        local_rbo_exists = os.path.exists("local/rbo.json")

        current_source = "–õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã" if USE_LOCAL_FILES else "API"

        status_text = f"""
üìä **–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã**

üîß **–ù–∞—Å—Ç—Ä–æ–π–∫–∏:**
‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: {current_source}
‚Ä¢ USE_LOCAL_FILES: {USE_LOCAL_FILES}

üìÅ **–õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã:**
‚Ä¢ RST –ø–µ—Ä–µ–≤–æ–¥: {'‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' if local_rst_exists else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}
‚Ä¢ RBO –ø–µ—Ä–µ–≤–æ–¥: {'‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' if local_rbo_exists else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}

üåê **API:**
‚Ä¢ URL: {settings.API_URL}
‚Ä¢ Timeout: {settings.API_TIMEOUT}s

üíæ **–ö—ç—à:**
‚Ä¢ –í—Ä–µ–º—è –∂–∏–∑–Ω–∏: {settings.CACHE_TTL}s
‚Ä¢ –ó–∞–ø–∏—Å–µ–π –≤ –∫—ç—à–µ: {len(bible_api._cache)}
"""

        await message.answer(status_text, parse_mode="Markdown")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã.")


@admin_router.message(Command("reload_config"))
async def reload_config(message: Message):
    """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        # –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
        from utils.api_client import bible_api
        bible_api._cache.clear()

        await message.answer(
            "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞:\n"
            "‚Ä¢ –ö—ç—à –æ—á–∏—â–µ–Ω\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã",
            parse_mode="Markdown"
        )

        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.id} –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.")


@admin_router.message(Command("toggle_verses"))
async def toggle_verse_numbers(message: Message):
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        settings.ENABLE_VERSE_NUMBERS = not settings.ENABLE_VERSE_NUMBERS

        status = "–≤–∫–ª—é—á–µ–Ω—ã" if settings.ENABLE_VERSE_NUMBERS else "–æ—Ç–∫–ª—é—á–µ–Ω—ã"
        icon = "‚úÖ" if settings.ENABLE_VERSE_NUMBERS else "‚ùå"

        format_example = ""
        if settings.ENABLE_VERSE_NUMBERS:
            format_example = "\n\nüìñ **–ü—Ä–∏–º–µ—Ä –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:**\n<b>1</b> –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–≥–æ —Å—Ç–∏—Ö–∞\n<b>2</b> –¢–µ–∫—Å—Ç –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç–∏—Ö–∞\n..."
        else:
            format_example = "\n\nüìñ **–ü—Ä–∏–º–µ—Ä –æ–±—ã—á–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:**\n–¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–≥–æ —Å—Ç–∏—Ö–∞ –¢–µ–∫—Å—Ç –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç–∏—Ö–∞..."

        await message.answer(
            f"{icon} **–ù–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–æ–≤ {status}**\n\n"
            f"–¢–µ–ø–µ—Ä—å –≥–ª–∞–≤—ã –ë–∏–±–ª–∏–∏ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è "
            f"{'—Å –Ω–æ–º–µ—Ä–∞–º–∏ —Å—Ç–∏—Ö–æ–≤ (–∫–∞–∂–¥—ã–π —Å—Ç–∏—Ö —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)' if settings.ENABLE_VERSE_NUMBERS else '–≤ –æ–±—ã—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (—Å–ø–ª–æ—à–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º)'}."
            f"{format_example}",
            parse_mode="HTML"
        )

        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.id} {'–≤–∫–ª—é—á–∏–ª' if settings.ENABLE_VERSE_NUMBERS else '–æ—Ç–∫–ª—é—á–∏–ª'} –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–æ–≤")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")


@admin_router.message(Command("toggle_quote"))
async def toggle_quote_mode(message: Message):
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∏–±–ª–µ–π—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∫–∞–∫ —Ü–∏—Ç–∞—Ç—ã."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        settings.BIBLE_QUOTE_ENABLED = not settings.BIBLE_QUOTE_ENABLED

        status = "–≤–∫–ª—é—á–µ–Ω" if settings.BIBLE_QUOTE_ENABLED else "–æ—Ç–∫–ª—é—á–µ–Ω"
        icon = "‚úÖ" if settings.BIBLE_QUOTE_ENABLED else "‚ùå"

        format_example = ""
        if settings.BIBLE_QUOTE_ENABLED:
            format_example = "\n\nüìñ **–ü—Ä–∏–º–µ—Ä —Å —Ü–∏—Ç–∞—Ç–æ–π:**\n<blockquote>–í–µ—Ç—Ö–∏–π –∑–∞–≤–µ—Ç. –ë—ã—Ç–∏–µ 1:\n–í –Ω–∞—á–∞–ª–µ —Å–æ—Ç–≤–æ—Ä–∏–ª –ë–æ–≥ –Ω–µ–±–æ –∏ –∑–µ–º–ª—é.\n–ó–µ–º–ª—è –∂–µ –±—ã–ª–∞ –±–µ–∑–≤–∏–¥–Ω–∞ –∏ –ø—É—Å—Ç–∞...</blockquote>"
        else:
            format_example = "\n\nüìñ **–ü—Ä–∏–º–µ—Ä –æ–±—ã—á–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:**\n–í–µ—Ç—Ö–∏–π –∑–∞–≤–µ—Ç. –ë—ã—Ç–∏–µ 1:\n–í –Ω–∞—á–∞–ª–µ —Å–æ—Ç–≤–æ—Ä–∏–ª –ë–æ–≥ –Ω–µ–±–æ –∏ –∑–µ–º–ª—é.\n–ó–µ–º–ª—è –∂–µ –±—ã–ª–∞ –±–µ–∑–≤–∏–¥–Ω–∞ –∏ –ø—É—Å—Ç–∞..."

        await message.answer(
            f"{icon} **–†–µ–∂–∏–º —Ü–∏—Ç–∞—Ç {status}**\n\n"
            f"–¢–µ–ø–µ—Ä—å –±–∏–±–ª–µ–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è "
            f"{'–∫–∞–∫ —Ü–∏—Ç–∞—Ç–∞ (—Å —Å–∏–º–≤–æ–ª–æ–º > –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫)' if settings.BIBLE_QUOTE_ENABLED else '–≤ –æ–±—ã—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ'}."
            f"{format_example}",
            parse_mode="HTML"
        )

        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.id} {'–≤–∫–ª—é—á–∏–ª' if settings.BIBLE_QUOTE_ENABLED else '–æ—Ç–∫–ª—é—á–∏–ª'} —Ä–µ–∂–∏–º —Ü–∏—Ç–∞—Ç")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ —Ü–∏—Ç–∞—Ç: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")


@admin_router.message(Command("settings"))
async def show_settings(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        current_source = "–õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã" if settings.USE_LOCAL_FILES else "API"

        verse_format = "–û—Ç–∫–ª—é—á–µ–Ω—ã"
        if settings.ENABLE_VERSE_NUMBERS:
            if settings.BIBLE_MARKDOWN_ENABLED:
                verse_format = settings.BIBLE_MARKDOWN_MODE
            else:
                verse_format = "HTML"

        commentary_format = "HTML"
        if settings.COMMENTARY_MARKDOWN_ENABLED:
            commentary_format = settings.COMMENTARY_MARKDOWN_MODE

        settings_text = f"""
‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:**

üìä **–û—Å–Ω–æ–≤–Ω—ã–µ:**
‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: {current_source}
‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É: {"‚úÖ –í–∫–ª—é—á–µ–Ω" if settings.ENABLE_WORD_SEARCH else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω"}
‚Ä¢ –ù–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–æ–≤: {"‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if settings.ENABLE_VERSE_NUMBERS else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã"}

üìù **–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ë–∏–±–ª–∏–∏:**
‚Ä¢ –§–æ—Ä–º–∞—Ç —Å—Ç–∏—Ö–æ–≤: {verse_format}
‚Ä¢ Markdown –≤–∫–ª—é—á–µ–Ω: {"‚úÖ –î–∞" if settings.BIBLE_MARKDOWN_ENABLED else "‚ùå –ù–µ—Ç"}
‚Ä¢ –†–µ–∂–∏–º —Ü–∏—Ç–∞—Ç: {"‚úÖ –í–∫–ª—é—á–µ–Ω" if settings.BIBLE_QUOTE_ENABLED else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω"}
‚Ä¢ –ü—Ä–æ–±–µ–ª–æ–≤ –ø–æ—Å–ª–µ –Ω–æ–º–µ—Ä–∞: {settings.BIBLE_VERSE_NUMBER_SPACING}
‚Ä¢ –§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤: {"–≥–ª–∞–≤–∞:—Å—Ç–∏—Ö" if settings.BIBLE_INCLUDE_CHAPTER_NUMBER else "—Ç–æ–ª—å–∫–æ —Å—Ç–∏—Ö"}
‚Ä¢ –°—Ç–∏–ª—å –Ω–æ–º–µ—Ä–æ–≤: {settings.BIBLE_VERSE_NUMBER_STYLE}

üí¨ **–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –∏ –ò–ò:**
‚Ä¢ –§–æ—Ä–º–∞—Ç: {commentary_format}
‚Ä¢ Markdown –≤–∫–ª—é—á–µ–Ω: {"‚úÖ –î–∞" if settings.COMMENTARY_MARKDOWN_ENABLED else "‚ùå –ù–µ—Ç"}
‚Ä¢ –ñ–∏—Ä–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏: {"‚úÖ –î–∞" if settings.MARKDOWN_BOLD_TITLE else "‚ùå –ù–µ—Ç"}
‚Ä¢ –¶–∏—Ç–∞—Ç—ã: {"‚úÖ –î–∞" if settings.MARKDOWN_QUOTE else "‚ùå –ù–µ—Ç"}

üîß **–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:**
‚Ä¢ `/toggle_source` - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ `/toggle_verses` - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–æ–≤
‚Ä¢ `/toggle_quote` - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ü–∏—Ç–∞—Ç
‚Ä¢ `/toggle_chapter_numbers` - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤
‚Ä¢ `/set_verse_style` - –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤
‚Ä¢ `/set_format` - –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å—Ç–∏—Ö–æ–≤
‚Ä¢ `/set_commentary_format` - –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π
‚Ä¢ `/set_spacing` - –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–µ–ª–æ–≤ –ø–æ—Å–ª–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–∞
‚Ä¢ `/status` - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ `/reload_config` - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
"""

        await message.answer(settings_text, parse_mode="Markdown")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫.")


@admin_router.message(Command("set_format"))
async def set_format_command(message: Message):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤ (HTML, Markdown, MarkdownV2)"""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="HTML", callback_data="format_HTML")],
            [InlineKeyboardButton(
                text="Markdown", callback_data="format_Markdown")],
            [InlineKeyboardButton(
                text="MarkdownV2", callback_data="format_MarkdownV2")],
        ])

        current_format = "HTML"
        if settings.BIBLE_MARKDOWN_ENABLED:
            current_format = settings.BIBLE_MARKDOWN_MODE

        await message.answer(
            f"üìù **–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤:**\n\n"
            f"–¢–µ–∫—É—â–∏–π —Ñ–æ—Ä–º–∞—Ç: **{current_format}**\n\n"
            f"‚Ä¢ **HTML** - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π HTML —Ñ–æ—Ä–º–∞—Ç (<b>–Ω–æ–º–µ—Ä</b> —Ç–µ–∫—Å—Ç)\n"
            f"‚Ä¢ **Markdown** - –ë–∞–∑–æ–≤—ã–π Markdown (**–Ω–æ–º–µ—Ä** —Ç–µ–∫—Å—Ç)\n"
            f"‚Ä¢ **MarkdownV2** - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π Markdown (*–Ω–æ–º–µ—Ä* —Ç–µ–∫—Å—Ç)",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–æ—Ä–º–∞—Ç–∞: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞")


@admin_router.callback_query(F.data.startswith("format_"))
async def format_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        format_name = callback.data.split("_")[1]

        if format_name == "HTML":
            settings.BIBLE_MARKDOWN_ENABLED = False
            settings.BIBLE_MARKDOWN_MODE = "HTML"
        elif format_name == "Markdown":
            settings.BIBLE_MARKDOWN_ENABLED = True
            settings.BIBLE_MARKDOWN_MODE = "Markdown"
        elif format_name == "MarkdownV2":
            settings.BIBLE_MARKDOWN_ENABLED = True
            settings.BIBLE_MARKDOWN_MODE = "MarkdownV2"

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if format_name == "HTML":
            example = "<b>1</b> –í –Ω–∞—á–∞–ª–µ —Å–æ—Ç–≤–æ—Ä–∏–ª –ë–æ–≥ –Ω–µ–±–æ –∏ –∑–µ–º–ª—é.\n<b>2</b> –ó–µ–º–ª—è –∂–µ –±—ã–ª–∞ –±–µ–∑–≤–∏–¥–Ω–∞ –∏ –ø—É—Å—Ç–∞..."
        elif format_name == "Markdown":
            example = "**1** –í –Ω–∞—á–∞–ª–µ —Å–æ—Ç–≤–æ—Ä–∏–ª –ë–æ–≥ –Ω–µ–±–æ –∏ –∑–µ–º–ª—é.\n**2** –ó–µ–º–ª—è –∂–µ –±—ã–ª–∞ –±–µ–∑–≤–∏–¥–Ω–∞ –∏ –ø—É—Å—Ç–∞..."
        else:  # MarkdownV2
            example = "*1* –í –Ω–∞—á–∞–ª–µ —Å–æ—Ç–≤–æ—Ä–∏–ª –ë–æ–≥ –Ω–µ–±–æ –∏ –∑–µ–º–ª—é\\.\n*2* –ó–µ–º–ª—è –∂–µ –±—ã–ª–∞ –±–µ–∑–≤–∏–¥–Ω–∞ –∏ –ø—É—Å—Ç–∞\\.\\.\\."

        await callback.answer(f"‚úÖ –§–æ—Ä–º–∞—Ç –∏–∑–º–µ–Ω–µ–Ω: {format_name}")
        await callback.message.edit_text(
            f"‚úÖ **–§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {format_name}**\n\n"
            f"üìñ **–ü—Ä–∏–º–µ—Ä –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:**\n{example}\n\n"
            f"üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Å—Ç–∏—Ö–æ–≤.",
            parse_mode="Markdown"
        )

        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {callback.from_user.id} –∏–∑–º–µ–Ω–∏–ª —Ñ–æ—Ä–º–∞—Ç —Å—Ç–∏—Ö–æ–≤ –Ω–∞: {format_name}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∞: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞")


@admin_router.message(Command("set_commentary_format"))
async def set_commentary_format_command(message: Message):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –∏ –ò–ò-–æ—Ç–≤–µ—Ç–æ–≤ (HTML, Markdown, MarkdownV2)"""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text="HTML", callback_data="commentary_format_HTML")],
            [InlineKeyboardButton(
                text="Markdown", callback_data="commentary_format_Markdown")],
            [InlineKeyboardButton(
                text="MarkdownV2", callback_data="commentary_format_MarkdownV2")],
        ])

        current_format = "HTML"
        if settings.COMMENTARY_MARKDOWN_ENABLED:
            current_format = settings.COMMENTARY_MARKDOWN_MODE

        await message.answer(
            f"üí¨ **–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –∏ –ò–ò-–æ—Ç–≤–µ—Ç–æ–≤:**\n\n"
            f"–¢–µ–∫—É—â–∏–π —Ñ–æ—Ä–º–∞—Ç: **{current_format}**\n\n"
            f"‚Ä¢ **HTML** - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π HTML —Ñ–æ—Ä–º–∞—Ç (<b>–∑–∞–≥–æ–ª–æ–≤–æ–∫</b>, <i>–∫—É—Ä—Å–∏–≤</i>)\n"
            f"‚Ä¢ **Markdown** - –ë–∞–∑–æ–≤—ã–π Markdown (**–∑–∞–≥–æ–ª–æ–≤–æ–∫**, *–∫—É—Ä—Å–∏–≤*)\n"
            f"‚Ä¢ **MarkdownV2** - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π Markdown (*–∑–∞–≥–æ–ª–æ–≤–æ–∫*, _–∫—É—Ä—Å–∏–≤_)",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π")


@admin_router.callback_query(F.data.startswith("commentary_format_"))
async def commentary_format_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        format_name = callback.data.split("_")[2]

        if format_name == "HTML":
            settings.COMMENTARY_MARKDOWN_ENABLED = False
            settings.COMMENTARY_MARKDOWN_MODE = "HTML"
        elif format_name == "Markdown":
            settings.COMMENTARY_MARKDOWN_ENABLED = True
            settings.COMMENTARY_MARKDOWN_MODE = "Markdown"
        elif format_name == "MarkdownV2":
            settings.COMMENTARY_MARKDOWN_ENABLED = True
            settings.COMMENTARY_MARKDOWN_MODE = "MarkdownV2"

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if format_name == "HTML":
            example = "<b>–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ. –õ–æ–ø—É—Ö–∏–Ω–∞</b>\n\n<i>–¢–µ–∫—Å—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —Å –≤–∞–∂–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏...</i>"
        elif format_name == "Markdown":
            example = "**–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ. –õ–æ–ø—É—Ö–∏–Ω–∞**\n\n*–¢–µ–∫—Å—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —Å –≤–∞–∂–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏...*"
        else:  # MarkdownV2
            example = "*–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ\\. –õ–æ–ø—É—Ö–∏–Ω–∞*\n\n_–¢–µ–∫—Å—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —Å –≤–∞–∂–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏\\.\\.\\._"

        await callback.answer(f"‚úÖ –§–æ—Ä–º–∞—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω: {format_name}")
        await callback.message.edit_text(
            f"‚úÖ **–§–æ—Ä–º–∞—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –∏ –ò–ò-–æ—Ç–≤–µ—Ç–æ–≤ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {format_name}**\n\n"
            f"üí¨ **–ü—Ä–∏–º–µ—Ä –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:**\n{example}\n\n"
            f"üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –∏ –ò–ò-–æ—Ç–≤–µ—Ç–æ–≤.",
            parse_mode="Markdown"
        )

        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {callback.from_user.id} –∏–∑–º–µ–Ω–∏–ª —Ñ–æ—Ä–º–∞—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –Ω–∞: {format_name}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π")


@admin_router.message(Command("set_spacing"))
async def set_spacing_command(message: Message):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–µ–ª–æ–≤ –ø–æ—Å–ª–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–∞"""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–±–µ–ª–æ–≤
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="1 –ø—Ä–æ–±–µ–ª", callback_data="spacing_1"),
                InlineKeyboardButton(
                    text="2 –ø—Ä–æ–±–µ–ª–∞", callback_data="spacing_2")
            ],
            [
                InlineKeyboardButton(
                    text="3 –ø—Ä–æ–±–µ–ª–∞", callback_data="spacing_3"),
                InlineKeyboardButton(
                    text="4 –ø—Ä–æ–±–µ–ª–∞", callback_data="spacing_4")
            ],
            [
                InlineKeyboardButton(
                    text="5 –ø—Ä–æ–±–µ–ª–æ–≤", callback_data="spacing_5")
            ]
        ])

        current_spacing = settings.BIBLE_VERSE_NUMBER_SPACING

        await message.answer(
            f"üìè **–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–µ–ª–æ–≤ –ø–æ—Å–ª–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–∞:**\n\n"
            f"–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **{current_spacing} {'–ø—Ä–æ–±–µ–ª' if current_spacing == 1 else '–ø—Ä–æ–±–µ–ª–∞' if current_spacing <= 4 else '–ø—Ä–æ–±–µ–ª–æ–≤'}**\n\n"
            f"üìñ **–ü—Ä–∏–º–µ—Ä —Å {current_spacing} –ø—Ä–æ–±–µ–ª–æ–º(–∞–º–∏):**\n"
            f"<b>1</b>{' ' * current_spacing}–í –Ω–∞—á–∞–ª–µ —Å–æ—Ç–≤–æ—Ä–∏–ª –ë–æ–≥ –Ω–µ–±–æ –∏ –∑–µ–º–ª—é.\n"
            f"<b>2</b>{' ' * current_spacing}–ó–µ–º–ª—è –∂–µ –±—ã–ª–∞ –±–µ–∑–≤–∏–¥–Ω–∞ –∏ –ø—É—Å—Ç–∞...",
            reply_markup=keyboard,
            parse_mode="HTML"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–±–µ–ª–æ–≤: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–±–µ–ª–æ–≤")


@admin_router.callback_query(F.data.startswith("spacing_"))
async def spacing_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–±–µ–ª–æ–≤"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        spacing_count = int(callback.data.split("_")[1])
        settings.BIBLE_VERSE_NUMBER_SPACING = spacing_count

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä —Å –Ω–æ–≤—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—Ä–æ–±–µ–ª–æ–≤
        example_html = f"<b>1</b>{' ' * spacing_count}–í –Ω–∞—á–∞–ª–µ —Å–æ—Ç–≤–æ—Ä–∏–ª –ë–æ–≥ –Ω–µ–±–æ –∏ –∑–µ–º–ª—é.\n<b>2</b>{' ' * spacing_count}–ó–µ–º–ª—è –∂–µ –±—ã–ª–∞ –±–µ–∑–≤–∏–¥–Ω–∞ –∏ –ø—É—Å—Ç–∞..."

        spacing_word = "–ø—Ä–æ–±–µ–ª" if spacing_count == 1 else "–ø—Ä–æ–±–µ–ª–∞" if spacing_count <= 4 else "–ø—Ä–æ–±–µ–ª–æ–≤"

        await callback.answer(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {spacing_count} {spacing_word}")
        await callback.message.edit_text(
            f"‚úÖ **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–µ–ª–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {spacing_count} {spacing_word}**\n\n"
            f"üìñ **–ü—Ä–∏–º–µ—Ä –Ω–æ–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:**\n{example_html}\n\n"
            f"üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Å—Ç–∏—Ö–æ–≤.",
            parse_mode="HTML"
        )

        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {callback.from_user.id} –∏–∑–º–µ–Ω–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–µ–ª–æ–≤ –Ω–∞: {spacing_count}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–±–µ–ª–æ–≤: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–±–µ–ª–æ–≤")


@admin_router.message(Command("toggle_chapter_numbers"))
async def toggle_chapter_numbers(message: Message):
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤ –º–µ–∂–¥—É '—Å—Ç–∏—Ö' –∏ '–≥–ª–∞–≤–∞:—Å—Ç–∏—Ö'."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        settings.BIBLE_INCLUDE_CHAPTER_NUMBER = not settings.BIBLE_INCLUDE_CHAPTER_NUMBER

        new_format = "–≥–ª–∞–≤–∞:—Å—Ç–∏—Ö" if settings.BIBLE_INCLUDE_CHAPTER_NUMBER else "—Ç–æ–ª—å–∫–æ —Å—Ç–∏—Ö"
        icon = "‚úÖ" if settings.BIBLE_INCLUDE_CHAPTER_NUMBER else "üìñ"

        format_example = ""
        if settings.BIBLE_INCLUDE_CHAPTER_NUMBER:
            format_example = "\n\nüìñ **–ü—Ä–∏–º–µ—Ä —Å –Ω–æ–º–µ—Ä–∞–º–∏ –≥–ª–∞–≤:**\n<b>1:1</b> –í –Ω–∞—á–∞–ª–µ —Å–æ—Ç–≤–æ—Ä–∏–ª –ë–æ–≥ –Ω–µ–±–æ –∏ –∑–µ–º–ª—é.\n<b>1:2</b> –ó–µ–º–ª—è –∂–µ –±—ã–ª–∞ –±–µ–∑–≤–∏–¥–Ω–∞ –∏ –ø—É—Å—Ç–∞..."
        else:
            format_example = "\n\nüìñ **–ü—Ä–∏–º–µ—Ä —Ç–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤:**\n<b>1</b> –í –Ω–∞—á–∞–ª–µ —Å–æ—Ç–≤–æ—Ä–∏–ª –ë–æ–≥ –Ω–µ–±–æ –∏ –∑–µ–º–ª—é.\n<b>2</b> –ó–µ–º–ª—è –∂–µ –±—ã–ª–∞ –±–µ–∑–≤–∏–¥–Ω–∞ –∏ –ø—É—Å—Ç–∞..."

        await message.answer(
            f"{icon} **–§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {new_format}**\n\n"
            f"–¢–µ–ø–µ—Ä—å –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–æ–≤ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è "
            f"{'–≤ —Ñ–æ—Ä–º–∞—Ç–µ \"–≥–ª–∞–≤–∞:—Å—Ç–∏—Ö\" (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1:12)' if settings.BIBLE_INCLUDE_CHAPTER_NUMBER else '—Ç–æ–ª—å–∫–æ –∫–∞–∫ –Ω–æ–º–µ—Ä —Å—Ç–∏—Ö–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 12)'}."
            f"{format_example}",
            parse_mode="HTML"
        )

        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.id} –∏–∑–º–µ–Ω–∏–ª —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤ –Ω–∞: {new_format}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–æ–º–µ—Ä–æ–≤: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–æ–º–µ—Ä–æ–≤")


@admin_router.message(Command("set_verse_style"))
async def set_verse_style(message: Message):
    """–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è
        style_buttons = [
            [InlineKeyboardButton(
                text="üìù –ñ–∏—Ä–Ω—ã–π (bold)",
                callback_data="setstyle_bold"
            )],
            [InlineKeyboardButton(
                text="üíª –ö–æ–¥ (code)",
                callback_data="setstyle_code"
            )],
            [InlineKeyboardButton(
                text="‚úçÔ∏è –ö—É—Ä—Å–∏–≤ (italic)",
                callback_data="setstyle_italic"
            )]
        ]

        kb = InlineKeyboardMarkup(inline_keyboard=style_buttons)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
        examples = (
            f"üìñ **–ü—Ä–∏–º–µ—Ä—ã —Å—Ç–∏–ª–µ–π:**\n\n"
            f"**–ñ–∏—Ä–Ω—ã–π (bold):** <b>12</b> –¢–µ–∫—Å—Ç —Å—Ç–∏—Ö–∞...\n"
            f"**–ö–æ–¥ (code):** <code>12</code> –¢–µ–∫—Å—Ç —Å—Ç–∏—Ö–∞...\n"
            f"**–ö—É—Ä—Å–∏–≤ (italic):** <i>12</i> –¢–µ–∫—Å—Ç —Å—Ç–∏—Ö–∞...\n\n"
            f"–¢–µ–∫—É—â–∏–π —Å—Ç–∏–ª—å: **{settings.BIBLE_VERSE_NUMBER_STYLE}**"
        )

        await message.answer(examples, reply_markup=kb, parse_mode="HTML")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç–∏–ª–µ–π: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç–∏–ª–µ–π")


@admin_router.callback_query(F.data.startswith("setstyle_"))
async def set_verse_style_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤."""
    try:
        style = callback.data.split("_")[1]

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Å—Ç–∏–ª—å
        settings.BIBLE_VERSE_NUMBER_STYLE = style

        # –û–ø–∏—Å–∞–Ω–∏—è —Å—Ç–∏–ª–µ–π
        style_names = {
            "bold": "–∂–∏—Ä–Ω—ã–π",
            "code": "–∫–æ–¥",
            "italic": "–∫—É—Ä—Å–∏–≤"
        }

        style_name = style_names.get(style, style)

        await callback.message.edit_text(
            f"‚úÖ –°—Ç–∏–ª—å –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç–∏—Ö–æ–≤ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: **{style_name}**",
            parse_mode="HTML"
        )

        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {callback.from_user.id} –∏–∑–º–µ–Ω–∏–ª —Å—Ç–∏–ª—å –Ω–æ–º–µ—Ä–æ–≤ –Ω–∞: {style}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Å—Ç–∏–ª—è: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∏–ª—è")


@admin_router.message(Command("toggle_lopukhin"))
async def toggle_lopukhin_commentary(message: Message):
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –õ–æ–ø—É—Ö–∏–Ω–∞."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        settings.ENABLE_LOPUKHIN_COMMENTARY = not settings.ENABLE_LOPUKHIN_COMMENTARY

        status = "–≤–∫–ª—é—á–µ–Ω—ã" if settings.ENABLE_LOPUKHIN_COMMENTARY else "–æ—Ç–∫–ª—é—á–µ–Ω—ã"
        icon = "‚úÖ" if settings.ENABLE_LOPUKHIN_COMMENTARY else "‚ùå"

        await message.answer(
            f"{icon} **–¢–æ–ª–∫–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ. –õ–æ–ø—É—Ö–∏–Ω–∞ {status}**\n\n"
            f"–ö–Ω–æ–ø–∫–∏ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –±—É–¥—É—Ç "
            f"{'–æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ–¥ –≥–ª–∞–≤–∞–º–∏ –∏ —Å—Ç–∏—Ö–∞–º–∏' if settings.ENABLE_LOPUKHIN_COMMENTARY else '—Å–∫—Ä—ã—Ç—ã –≤–æ –≤—Å–µ–º –±–æ—Ç–µ'}.",
            parse_mode="Markdown"
        )

        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.id} –ø–µ—Ä–µ–∫–ª—é—á–∏–ª —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –õ–æ–ø—É—Ö–∏–Ω–∞: {status}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –õ–æ–ø—É—Ö–∏–Ω–∞: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π.")


@admin_router.message(Command("lopukhin_on"))
async def enable_lopukhin_commentary(message: Message):
    """–í–∫–ª—é—á–∞–µ—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –õ–æ–ø—É—Ö–∏–Ω–∞."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        settings.ENABLE_LOPUKHIN_COMMENTARY = True
        await message.answer(
            "‚úÖ **–¢–æ–ª–∫–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ. –õ–æ–ø—É—Ö–∏–Ω–∞ –≤–∫–ª—é—á–µ–Ω—ã**\n\n"
            "–ö–Ω–æ–ø–∫–∏ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π —Ç–µ–ø–µ—Ä—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ–¥ –≥–ª–∞–≤–∞–º–∏ –∏ —Å—Ç–∏—Ö–∞–º–∏.",
            parse_mode="Markdown"
        )
        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.id} –≤–∫–ª—é—á–∏–ª —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –õ–æ–ø—É—Ö–∏–Ω–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –õ–æ–ø—É—Ö–∏–Ω–∞: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π.")


@admin_router.message(Command("lopukhin_off"))
async def disable_lopukhin_commentary(message: Message):
    """–û—Ç–∫–ª—é—á–∞–µ—Ç —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –õ–æ–ø—É—Ö–∏–Ω–∞."""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    try:
        settings.ENABLE_LOPUKHIN_COMMENTARY = False
        await message.answer(
            "‚ùå **–¢–æ–ª–∫–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ. –õ–æ–ø—É—Ö–∏–Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω—ã**\n\n"
            "–ö–Ω–æ–ø–∫–∏ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –±—É–¥—É—Ç —Å–∫—Ä—ã—Ç—ã –≤–æ –≤—Å–µ–º –±–æ—Ç–µ.",
            parse_mode="Markdown"
        )
        logger.info(
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.id} –æ—Ç–∫–ª—é—á–∏–ª —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –õ–æ–ø—É—Ö–∏–Ω–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –õ–æ–ø—É—Ö–∏–Ω–∞: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π.")
