"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π —á–µ—Ä–µ–∑ YooMoney
"""
import logging
from typing import Optional

from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from services.yoomoney_service import yoomoney_service
from database.universal_manager import universal_db_manager as db_manager

logger = logging.getLogger(__name__)
router = Router()

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è
class DonationStates(StatesGroup):
    waiting_for_amount = State()
    waiting_for_message = State()

# === –ü–û–ñ–ï–†–¢–í–û–í–ê–ù–ò–Ø –ß–ï–†–ï–ó YOOMONEY ===

@router.callback_query(F.data == "donate_yoomoney_menu")
async def show_yoomoney_donation_menu(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π YooMoney"""
    try:
        if not yoomoney_service.is_enabled():
            await callback.answer("‚ùå YooMoney –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω", show_alert=True)
            return
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
        keyboard = create_yoomoney_donation_keyboard()
        
        yoomoney_text = (
            "üí∞ **–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ YooMoney**\n\n"
            "üéØ **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ YooMoney:**\n"
            "‚Ä¢ –û–ø–ª–∞—Ç–∞ —Å –ª—é–±—ã—Ö –∫–∞—Ä—Ç (Visa, MasterCard, –ú–ò–†)\n"
            "‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞\n"
            "‚Ä¢ –ù–µ –Ω—É–∂–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n"
            "‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤\n\n"
            "üíù **–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è:**"
        )
        
        await callback.message.edit_text(
            yoomoney_text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
        await callback.answer("üí∞ –ú–µ–Ω—é YooMoney –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–µ–Ω—é YooMoney: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é", show_alert=True)


@router.callback_query(F.data.startswith("donate_yoomoney_"))
async def process_yoomoney_donation(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π —á–µ—Ä–µ–∑ YooMoney"""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—É–º–º—É –∏–∑ callback_data
        amount_str = callback.data.replace("donate_yoomoney_", "")
        
        if amount_str == "custom":
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—É–º–º—É
            await state.set_state(DonationStates.waiting_for_amount)
            
            await callback.message.edit_text(
                "üí∞ **–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è**\n\n"
                "üíµ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö (–æ—Ç 1 –¥–æ 50000):\n\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä: 150",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                    InlineKeyboardButton(
                        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å—É–º–º–∞–º",
                        callback_data="donate_yoomoney_menu"
                    )
                ]])
            )
            
            await callback.answer("üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ
        if not amount_str.isdigit():
            await callback.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞", show_alert=True)
            return
            
        amount = float(amount_str)
        
        # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è
        donation_data = yoomoney_service.create_donation_link(
            amount=amount,
            user_id=callback.from_user.id,
            message="",
            return_url="https://t.me/bedrik12345_bot"
        )
        
        if donation_data:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ pending
            await save_pending_donation(
                user_id=callback.from_user.id,
                amount=amount,
                payment_id=donation_data['payment_id'],
                message=""
            )
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã
            keyboard = InlineKeyboardBuilder()
            keyboard.add(InlineKeyboardButton(
                text="üí∞ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ",
                url=donation_data['payment_url']
            ))
            keyboard.add(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å—É–º–º–∞–º",
                callback_data="donate_yoomoney_menu"
            ))
            keyboard.adjust(1)
            
            donation_text = (
                f"üí∞ **–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ {amount}‚ÇΩ**\n\n"
                f"üéØ **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è Gospel Bot\n"
                f"üí≥ **–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:** YooMoney (–ª—é–±—ã–µ –∫–∞—Ä—Ç—ã)\n"
                f"üÜî **ID –ø–ª–∞—Ç–µ–∂–∞:** {donation_data['payment_id']}\n\n"
                f"üëÜ **–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ**\n\n"
                f"‚ÑπÔ∏è –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –±–æ—Ç–µ."
            )
            
            await callback.message.edit_text(
                donation_text,
                reply_markup=keyboard.as_markup(),
                parse_mode="Markdown"
            )
            
            await callback.answer("üí∞ –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞!")
        else:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏", show_alert=True)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è YooMoney: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è", show_alert=True)


# === –û–ë–†–ê–ë–û–¢–ö–ê –í–í–û–î–ê –ü–†–û–ò–ó–í–û–õ–¨–ù–û–ô –°–£–ú–ú–´ ===

@router.message(DonationStates.waiting_for_amount)
async def process_custom_donation_amount(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ
        try:
            amount = float(message.text.replace(',', '.'))
        except ValueError:
            await message.answer(
                "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 150",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                    InlineKeyboardButton(
                        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å—É–º–º–∞–º",
                        callback_data="donate_yoomoney_menu"
                    )
                ]])
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã
        if amount < 1:
            await message.answer(
                "‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1‚ÇΩ",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                    InlineKeyboardButton(
                        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å—É–º–º–∞–º",
                        callback_data="donate_yoomoney_menu"
                    )
                ]])
            )
            return
        
        if amount > 50000:
            await message.answer(
                "‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 50000‚ÇΩ",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                    InlineKeyboardButton(
                        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å—É–º–º–∞–º",
                        callback_data="donate_yoomoney_menu"
                    )
                ]])
            )
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è
        await state.update_data(amount=amount)
        await state.set_state(DonationStates.waiting_for_message)
        
        await message.answer(
            f"üí∞ **–°—É–º–º–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è: {amount}‚ÇΩ**\n\n"
            f"üí¨ –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—é?\n\n"
            f"–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                InlineKeyboardButton(
                    text="‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
                    callback_data=f"donate_yoomoney_skip_message_{amount}"
                )
            ], [
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å—É–º–º–∞–º",
                    callback_data="donate_yoomoney_menu"
                )
            ]])
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—É–º–º—ã –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—É–º–º—ã")


@router.message(DonationStates.waiting_for_message)
async def process_donation_message(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—é"""
    try:
        data = await state.get_data()
        amount = data.get('amount', 0)
        user_message = message.text[:200]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        
        await create_donation_with_message(message, amount, user_message, state)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")


@router.callback_query(F.data.startswith("donate_yoomoney_skip_message_"))
async def skip_donation_message(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–æ–ø—É—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –∫ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—é"""
    try:
        amount_str = callback.data.replace("donate_yoomoney_skip_message_", "")
        amount = float(amount_str)
        
        await create_donation_with_message(callback.message, amount, "", state)
        await callback.answer("‚û°Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞", show_alert=True)


async def create_donation_with_message(message_obj, amount: float, user_message: str, state: FSMContext):
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º"""
    try:
        user_id = message_obj.from_user.id if hasattr(message_obj, 'from_user') else message_obj.chat.id
        
        # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è
        donation_data = yoomoney_service.create_donation_link(
            amount=amount,
            user_id=user_id,
            message=user_message,
            return_url="https://t.me/bedrik12345_bot"
        )
        
        if donation_data:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ pending
            await save_pending_donation(
                user_id=user_id,
                amount=amount,
                payment_id=donation_data['payment_id'],
                message=user_message
            )
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã
            keyboard = InlineKeyboardBuilder()
            keyboard.add(InlineKeyboardButton(
                text="üí∞ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ",
                url=donation_data['payment_url']
            ))
            keyboard.add(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å—É–º–º–∞–º",
                callback_data="donate_yoomoney_menu"
            ))
            keyboard.adjust(1)
            
            donation_text = (
                f"üí∞ **–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ {amount}‚ÇΩ**\n\n"
                f"üéØ **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è Gospel Bot\n"
                f"üí≥ **–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:** YooMoney (–ª—é–±—ã–µ –∫–∞—Ä—Ç—ã)\n"
                f"üÜî **ID –ø–ª–∞—Ç–µ–∂–∞:** {donation_data['payment_id']}\n"
            )
            
            if user_message:
                donation_text += f"üí¨ **–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:** {user_message}\n"
            
            donation_text += (
                f"\nüëÜ **–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ**\n\n"
                f"‚ÑπÔ∏è –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –±–æ—Ç–µ."
            )
            
            await message_obj.answer(
                donation_text,
                reply_markup=keyboard.as_markup(),
                parse_mode="Markdown"
            )
        else:
            await message_obj.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è")
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º: {e}")
        await message_obj.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è")


async def save_pending_donation(user_id: int, amount: float, payment_id: str, message: str):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ pending –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–∏"""
    try:
        if db_manager.is_supabase:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É donations –∫–∞–∫ pending
            result = db_manager.manager.client.table('donations').insert({
                'user_id': user_id,
                'amount_rub': int(amount),
                'amount_stars': 0,
                'payment_method': 'yoomoney',
                'payment_id': payment_id,
                'payment_status': 'pending',
                'message': message,
                'telegram_payment_charge_id': None
            }).execute()
            
            if result.data:
                logger.info(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ pending –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ: {payment_id}, {amount}‚ÇΩ")
            else:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å pending –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è pending –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è: {e}")


def create_yoomoney_donation_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π YooMoney"""
    amounts = yoomoney_service.get_donation_amounts()
    
    buttons = []
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥
    for i in range(0, len(amounts), 2):
        row = []
        for j in range(2):
            if i + j < len(amounts):
                amount = amounts[i + j]
                row.append(InlineKeyboardButton(
                    text=f"üí∞ {amount}‚ÇΩ",
                    callback_data=f"donate_yoomoney_{amount}"
                ))
        buttons.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
    buttons.append([
        InlineKeyboardButton(
            text="üíµ –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—É–º–º–∞",
            callback_data="donate_yoomoney_custom"
        )
    ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    buttons.append([
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è–º",
            callback_data="settings_donation"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


# === –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ü–õ–ê–¢–ï–ñ–ï–ô ===

async def check_pending_donations():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å pending –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π"""
    try:
        if not yoomoney_service.access_token:
            logger.info("‚ÑπÔ∏è YooMoney access token –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            return
        
        if db_manager.is_supabase:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ pending –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è YooMoney
            result = db_manager.manager.client.table('donations').select('*').eq('payment_method', 'yoomoney').eq('payment_status', 'pending').execute()
            
            if result.data:
                logger.info(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(result.data)} pending –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π YooMoney")
                
                for donation in result.data:
                    payment_id = donation['payment_id']
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ YooMoney API
                    payment_status = await yoomoney_service.check_payment_status(payment_id)
                    
                    if payment_status and payment_status['status'] == 'success':
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                        update_result = db_manager.manager.client.table('donations').update({
                            'payment_status': 'completed',
                            'completed_at': 'now()'
                        }).eq('id', donation['id']).execute()
                        
                        if update_result.data:
                            logger.info(f"‚úÖ –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ {payment_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: {donation['amount_rub']}‚ÇΩ")
                            
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                            # TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–æ—Ç–æ–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                        else:
                            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è {payment_id}")
            else:
                logger.info("‚ÑπÔ∏è Pending –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π YooMoney –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ pending –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π: {e}")