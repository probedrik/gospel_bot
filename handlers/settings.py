"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞
"""
import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from keyboards.settings import (
    create_settings_keyboard,
    create_admin_settings_keyboard,
    create_ai_limits_keyboard,
    create_button_management_keyboard
)
from keyboards.main import create_translations_keyboard, get_main_keyboard
from database.universal_manager import universal_db_manager as db_manager
from config.settings import ADMIN_USER_ID

logger = logging.getLogger(__name__)
router = Router()


@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def show_settings_menu(message: Message, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = create_settings_keyboard(message.from_user.id)
    await message.answer(
        "‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫:",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )


@router.callback_query(F.data == "back_to_settings")
async def back_to_settings(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"""
    keyboard = create_settings_keyboard(callback.from_user.id)
    await callback.message.edit_text(
        "‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫:",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data == "settings_translation")
async def settings_translation(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∞"""
    keyboard = create_translations_keyboard()
    await callback.message.edit_text(
        "üîÑ **–°–º–µ–Ω–∞ –ø–µ—Ä–µ–≤–æ–¥–∞**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –ë–∏–±–ª–∏–∏:",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data == "settings_ai_limits")
async def settings_ai_limits(callback: CallbackQuery, state: FSMContext):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏–º–∏—Ç–∞—Ö –ò–ò"""
    keyboard = create_ai_limits_keyboard()
    await callback.message.edit_text(
        "ü§ñ **–õ–∏–º–∏—Ç—ã –ò–ò**\n\n"
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏–º–∏—Ç–∞—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞:",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data == "ai_limits_my")
async def show_my_ai_limits(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = callback.from_user.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏–º–∏—Ç–∞—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        from datetime import datetime
        today = datetime.now().strftime('%Y-%m-%d')
        
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ –∏–∑ –ë–î
        # –ü–æ–∫–∞ —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        daily_limit = 10  # –î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç
        used_today = 3    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è
        remaining = daily_limit - used_today
        
        message_text = (
            f"üìä **–í–∞—à–∏ –ª–∏–º–∏—Ç—ã –ò–ò**\n\n"
            f"üóìÔ∏è **–°–µ–≥–æ–¥–Ω—è ({today}):**\n"
            f"‚Ä¢ –õ–∏–º–∏—Ç: {daily_limit} –∑–∞–ø—Ä–æ—Å–æ–≤\n"
            f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {used_today}\n"
            f"‚Ä¢ –û—Å—Ç–∞–ª–æ—Å—å: {remaining}\n\n"
            f"‚ÑπÔ∏è –õ–∏–º–∏—Ç—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00 UTC"
        )
        
        keyboard = create_ai_limits_keyboard()
        await callback.message.edit_text(
            message_text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤ –ò–ò: {e}")
        await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏–º–∏—Ç–∞—Ö")


@router.callback_query(F.data == "ai_limits_info")
async def show_ai_limits_info(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –ª–∏–º–∏—Ç—ã"""
    message_text = (
        "‚ÑπÔ∏è **–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –ª–∏–º–∏—Ç—ã –ò–ò**\n\n"
        "üéØ **–ß—Ç–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å–æ–º:**\n"
        "‚Ä¢ –†–∞–∑–±–æ—Ä —Å—Ç–∏—Ö–∞ –∏–ª–∏ –≥–ª–∞–≤—ã –ò–ò\n"
        "‚Ä¢ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –±–∏–±–ª–µ–π—Å–∫–æ–π —Ç–µ–º—ã\n"
        "‚Ä¢ –û—Ç–≤–µ—Ç—ã –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞\n\n"
        "‚è∞ **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤:**\n"
        "‚Ä¢ –õ–∏–º–∏—Ç—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n"
        "‚Ä¢ –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: 00:00 UTC\n\n"
        "üìà **–î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç:**\n"
        "‚Ä¢ –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: 10 –∑–∞–ø—Ä–æ—Å–æ–≤\n"
        "‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π\n\n"
        "üí° **–°–æ–≤–µ—Ç:** –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –≤ –∑–∞–∫–ª–∞–¥–∫–∏, "
        "—á—Ç–æ–±—ã –Ω–µ —Ç—Ä–∞—Ç–∏—Ç—å –ª–∏–º–∏—Ç –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã!"
    )
    
    keyboard = create_ai_limits_keyboard()
    await callback.message.edit_text(
        message_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data == "settings_help")
async def settings_help(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å"""
    help_text = (
        "‚ùì **–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**\n\n"
        "üìñ **–ß—Ç–µ–Ω–∏–µ –ë–∏–±–ª–∏–∏:**\n"
        "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É ‚Üí –≥–ª–∞–≤—É ‚Üí —á–∏—Ç–∞–π—Ç–µ\n"
        "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É: '–ò–Ω 3:16' –∏–ª–∏ '–ë—ã—Ç 1-3'\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –¥–∏–∞–ø–∞–∑–æ–Ω—ã: '–ú—Ñ 5:3-12'\n\n"
        "ü§ñ **–ò–ò –ø–æ–º–æ—â–Ω–∏–∫:**\n"
        "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ '–†–∞–∑–±–æ—Ä –æ—Ç –ò–ò' –ø–æ–¥ —Å—Ç–∏—Ö–æ–º\n"
        "‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã\n"
        "‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ª–∏–º–∏—Ç–∞–º–∏ –∑–∞–ø—Ä–æ—Å–æ–≤\n\n"
        "üìù **–ó–∞–∫–ª–∞–¥–∫–∏:**\n"
        "‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –ª—é–±—ã–µ —Å—Ç–∏—Ö–∏ –∏ –≥–ª–∞–≤—ã\n"
        "‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –∫ –∑–∞–∫–ª–∞–¥–∫–∞–º\n"
        "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã\n\n"
        "üìö **–ü–ª–∞–Ω—ã —á—Ç–µ–Ω–∏—è:**\n"
        "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –Ω–∞ –≥–æ–¥ –∏–ª–∏ –º–µ—Å—è—Ü\n"
        "‚Ä¢ –û—Ç–º–µ—á–∞–π—Ç–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ\n"
        "‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º\n\n"
        "üéØ **–¢–µ–º—ã:**\n"
        "‚Ä¢ –ò–∑—É—á–∞–π—Ç–µ –±–∏–±–ª–µ–π—Å–∫–∏–µ —Ç–µ–º—ã\n"
        "‚Ä¢ –ù–∞—Ö–æ–¥–∏—Ç–µ —Å—Ç–∏—Ö–∏ –ø–æ —Ç–µ–º–∞–º\n"
        "‚Ä¢ –ü–æ–ª—É—á–∞–π—Ç–µ —Ä–∞–∑–±–æ—Ä—ã –æ—Ç –ò–ò\n\n"
        "üí¨ **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:** @your_support_username"
    )
    
    keyboard = create_settings_keyboard(callback.from_user.id)
    await callback.message.edit_text(
        help_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
    await callback.answer()


# –ê–¥–º–∏–Ω—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
@router.callback_query(F.data == "settings_admin")
async def settings_admin(callback: CallbackQuery, state: FSMContext):
    """–ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å"""
    if callback.from_user.id != ADMIN_USER_ID:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
        return
    
    keyboard = create_admin_settings_keyboard()
    await callback.message.edit_text(
        "üëë **–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å**\n\n"
        "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞:",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_admin")
async def back_to_admin(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"""
    if callback.from_user.id != ADMIN_USER_ID:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
        return
    
    keyboard = create_admin_settings_keyboard()
    await callback.message.edit_text(
        "üëë **–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å**\n\n"
        "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞:",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data == "admin_buttons")
async def admin_buttons(callback: CallbackQuery, state: FSMContext):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏"""
    if callback.from_user.id != ADMIN_USER_ID:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
        return
    
    keyboard = create_button_management_keyboard()
    await callback.message.edit_text(
        "üéõÔ∏è **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏**\n\n"
        "–í–∫–ª—é—á–∏—Ç–µ –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é:\n"
        "‚úÖ - –∫–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞\n"
        "‚ùå - –∫–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data == "admin_stats")
async def admin_stats(callback: CallbackQuery, state: FSMContext):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞"""
    if callback.from_user.id != ADMIN_USER_ID:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
        return
    
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    stats_text = (
        "üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞**\n\n"
        "üë• **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**\n"
        "‚Ä¢ –í—Å–µ–≥–æ: 150\n"
        "‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: 25\n"
        "‚Ä¢ –ù–æ–≤—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: 12\n\n"
        "ü§ñ **–ò–ò –∑–∞–ø—Ä–æ—Å—ã:**\n"
        "‚Ä¢ –°–µ–≥–æ–¥–Ω—è: 45\n"
        "‚Ä¢ –ó–∞ –Ω–µ–¥–µ–ª—é: 320\n"
        "‚Ä¢ –ó–∞ –º–µ—Å—è—Ü: 1,250\n\n"
        "üìù **–ó–∞–∫–ª–∞–¥–∫–∏:**\n"
        "‚Ä¢ –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ: 890\n"
        "‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: 750\n\n"
        "üìö **–ü–ª–∞–Ω—ã —á—Ç–µ–Ω–∏—è:**\n"
        "‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤: 35\n"
        "‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö: 8"
    )
    
    keyboard = create_admin_settings_keyboard()
    await callback.message.edit_text(
        stats_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data == "admin_ai_settings")
async def admin_ai_settings(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    if callback.from_user.id != ADMIN_USER_ID:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
        return
    
    ai_settings_text = (
        "ü§ñ **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò**\n\n"
        "‚öôÔ∏è **–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:**\n"
        "‚Ä¢ –î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç: 10 –∑–∞–ø—Ä–æ—Å–æ–≤\n"
        "‚Ä¢ –ú–æ–¥–µ–ª—å: GPT-3.5-turbo\n"
        "‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤: 1000\n"
        "‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: 0.7\n\n"
        "üìä **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**\n"
        "‚Ä¢ –ó–∞–ø—Ä–æ—Å–æ–≤ —Å–µ–≥–æ–¥–Ω—è: 45\n"
        "‚Ä¢ –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: 250 —Ç–æ–∫–µ–Ω–æ–≤\n"
        "‚Ä¢ –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: 98%\n\n"
        "üí∞ **–°—Ç–æ–∏–º–æ—Å—Ç—å:**\n"
        "‚Ä¢ –°–µ–≥–æ–¥–Ω—è: $2.15\n"
        "‚Ä¢ –ó–∞ –º–µ—Å—è—Ü: $65.40"
    )
    
    keyboard = create_admin_settings_keyboard()
    await callback.message.edit_text(
        ai_settings_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_main")
async def back_to_main_menu(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await callback.message.delete()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—ã—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await callback.message.answer(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=get_main_keyboard()
    )
    await callback.answer()