#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π –±–∏–±–ª–µ–π—Å–∫–∏—Ö –∫–Ω–∏–≥ –≤ —Ç–µ–º–∞—Ö
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏ —Ç–∏–ø–∞ "–ò–∏—Å—É—Å–∞ –ù–∞–≤–∏–Ω–∞" -> "–ò–∏—Å—É—Å –ù–∞–≤–∏–Ω"
"""

import csv
import re
from pathlib import Path


def fix_bible_book_names(text):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –±–∏–±–ª–µ–π—Å–∫–∏—Ö –∫–Ω–∏–≥ –≤ —Ç–µ–∫—Å—Ç–µ"""

    # –°–ª–æ–≤–∞—Ä—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ -> –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ
    corrections = {
        # –ò–∏—Å—É—Å –ù–∞–≤–∏–Ω
        r'\b–ò–∏—Å—É—Å–∞ –ù–∞–≤–∏–Ω–∞\b': '–ò–∏—Å—É—Å –ù–∞–≤–∏–Ω',

        # –ú–∞–ª–∞—Ö–∏—è
        r'\b–ú–∞–ª–∞—Ö–∏–∏\b': '–ú–∞–ª–∞—Ö–∏—è',

        # –í—Ç–æ—Ä–æ–∑–∞–∫–æ–Ω–∏–µ
        r'\b–í—Ç–æ—Ä–æ–∑–∞–∫–æ–Ω–∏—è\b': '–í—Ç–æ—Ä–æ–∑–∞–∫–æ–Ω–∏–µ',

        # –ü—Å–∞–ª–æ–º (–º–æ–∂–µ—Ç –±—ã—Ç—å –∏ "–ü—Å–∞–ª—Ç–∏—Ä—å", –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å)
        r'\b–ü—Å–∞–ª–º–∞\b': '–ü—Å–∞–ª–æ–º',

        # –ò—Å–∞–∏—è
        r'\b–ò—Å–∞–π—è\b': '–ò—Å–∞–∏—è',

        # –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –ù–ï–¢
        # –ö–æ—Ä–∏–Ω—Ñ—è–Ω–∞–º –±–µ–∑ –Ω–æ–º–µ—Ä–∞ - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥ –Ω–∏–º –ù–ï–¢ —Ü–∏—Ñ—Ä—ã
        r'(?<!\d\s)\b–ö–æ—Ä–∏–Ω—Ñ—è–Ω–∞–º\s+(\d+)': r'1 –ö–æ—Ä–∏–Ω—Ñ—è–Ω–∞–º \1',

        # –§–µ—Å—Å–∞–ª–æ–Ω–∏–∫–∏–π—Ü–∞–º –±–µ–∑ –Ω–æ–º–µ—Ä–∞ - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥ –Ω–∏–º –ù–ï–¢ —Ü–∏—Ñ—Ä—ã
        r'(?<!\d\s)\b–§–µ—Å—Å–∞–ª–æ–Ω–∏–∫–∏–π—Ü–∞–º\s+(\d+)': r'1 –§–µ—Å—Å–∞–ª–æ–Ω–∏–∫–∏–π—Ü–∞–º \1',

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—á–µ–≤–∏–¥–Ω—ã–µ –æ—à–∏–±–∫–∏ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
        r'\b1–ü–∞—Ä–∞–ª–∏–ø–æ–º–µ–Ω–æ–Ω\b': '1 –ü–∞—Ä–∞–ª–∏–ø–æ–º–µ–Ω–æ–Ω',
        r'\b2–ö–æ—Ä–∏–Ω—Ñ—è–Ω–∞–º\b': '2 –ö–æ—Ä–∏–Ω—Ñ—è–Ω–∞–º',
        r'\b1–ü–µ—Ç—Ä–∞\b': '1 –ü–µ—Ç—Ä–∞',

        # –ï–∫–∫–ª–µ—Å–∏–∞—Å—Ç vs –ï–∫–∫–ª–µ–∑–∏–∞—Å—Ç
        r'\b–ï–∫–∫–ª–µ–∑–∏–∞—Å—Ç\b': '–ï–∫–∫–ª–µ—Å–∏–∞—Å—Ç',
    }

    result = text
    changes_made = []

    for pattern, replacement in corrections.items():
        old_result = result
        result = re.sub(pattern, replacement, result)
        if result != old_result:
            changes_made.append(f"{pattern} -> {replacement}")

    return result, changes_made


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    input_file = "bible_verses_by_topic.csv"
    output_file = "bible_verses_by_topic_fixed.csv"

    if not Path(input_file).exists():
        print(f"‚ùå –§–∞–π–ª {input_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    total_changes = 0
    topic_changes = {}

    try:
        # –ß–∏—Ç–∞–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º CSV
        with open(input_file, 'r', encoding='utf-8') as infile, \
                open(output_file, 'w', encoding='utf-8', newline='') as outfile:

            reader = csv.reader(infile)
            writer = csv.writer(outfile, quoting=csv.QUOTE_ALL)

            for row_num, row in enumerate(reader):
                if len(row) >= 2:  # –¢–µ–º–∞ –∏ —Å—Ç–∏—Ö–∏
                    topic = row[0]
                    verses = row[1]

                    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–∏–≥ –≤ —Å—Ç–∏—Ö–∞—Ö
                    fixed_verses, changes = fix_bible_book_names(verses)

                    if changes:
                        total_changes += len(changes)
                        topic_changes[topic] = changes
                        print(f"üìù –¢–µ–º–∞ '{topic}':")
                        for change in changes:
                            print(f"   üîß {change}")
                        print()

                    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
                    writer.writerow([topic, fixed_verses])
                else:
                    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
                    writer.writerow(row)

        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üìä –í—Å–µ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: {total_changes}")
        print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_file}")

        if topic_changes:
            print(f"\nüìã –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —Ç–µ–º—ã: {len(topic_changes)}")
            for topic, changes in topic_changes.items():
                print(f"   ‚Ä¢ {topic} ({len(changes)} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π)")
        else:
            print("‚ÑπÔ∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()
